package org.apache.bookkeeper.generated.bc;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer(100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(97)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator9.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator9.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator9.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator19.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel24 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel24, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel24, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel24, 1, 1L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator3.compositeBuffer((int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator3.compositeHeapBuffer();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(fileChannel24);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) '#');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 32, 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 52, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.directBuffer((int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (short) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 98 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) (short) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.directBuffer((int) (short) 100);
        java.lang.Class<?> wildcardClass11 = unpooledByteBufAllocator0.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) 100, (byte) -1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt(0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str41 = unpooledByteBufAllocator40.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        int int46 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf42, 0L);
        bufferedChannel9.close();
        int int48 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str41, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyShort((int) 'a');
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 0 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (-1L));
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (-1));
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (byte) 10, 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5, 64, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 5, cap: 5/5).slice(64, 97)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator3.compositeHeapBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) '#', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 35 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.buffer((int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) '#', (int) '#', false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator5.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        int int15 = unpooledByteBufAllocator9.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator9.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator9.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel20 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel20, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel20, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel20, (int) (short) 1);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator30.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator30.ioBuffer(1, (int) (short) 100);
        java.lang.String str39 = unpooledByteBufAllocator30.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator30.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf41 = unpooledByteBufAllocator30.compositeBuffer();
        java.lang.String str42 = unpooledByteBufAllocator30.toString();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator30.directBuffer();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = bufferedChannel29.read(byteBuf43, (long) (byte) 10, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minWritableBytes : -10 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(fileChannel20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str39, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(compositeByteBuf41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str42, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf43);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator10.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator10.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel37, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel50 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, (int) (short) 0, 2L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator1.directBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 0, (int) '#');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) '4');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 52, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 149 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 64, (int) '4', false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator2.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator2.compositeBuffer((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compositeByteBuf3);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt((int) '#');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 2L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.heapBuffer((int) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.heapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric8 = unpooledByteBufAllocator3.metric();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = unpooledByteBufAllocator3.calculateNewCapacity((int) (byte) -1, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric8);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 1 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(100, 10)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator7.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator7.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel18 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel18, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel25 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel18, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel18, (int) (byte) 100, (int) (short) 10, 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator3.compositeHeapBuffer((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = unpooledByteBufAllocator3.calculateNewCapacity((int) 'a', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 97 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(fileChannel18);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray35 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf37);
        int int41 = bufferedChannel9.read(byteBuf37, (long) 0, (int) (byte) 0);
        bufferedChannel9.clear();
        bufferedChannel9.flushAndForceWrite(false);
        long long45 = bufferedChannel9.getFileChannelPosition();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray35);
        org.junit.Assert.assertArrayEquals(byteBufferArray35, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator3.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf11);
        double[] doubleArray18 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copyDouble(doubleArray18);
        int[] intArray23 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copyInt(intArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyShort(intArray23);
        io.netty.buffer.ByteBuf[] byteBufArray26 = new io.netty.buffer.ByteBuf[] { byteBuf1, byteBuf11, byteBuf19, byteBuf25 };
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertArrayEquals(intArray23, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) 52);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator21.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator21.ioBuffer();
        int int27 = bufferedChannel14.read(byteBuf24, 100L, (int) (short) 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        int[] intArray7 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray10 = new io.netty.buffer.ByteBuf[] { byteBuf8, byteBuf9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.wrappedBuffer(0, byteBufArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertArrayEquals(intArray7, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.directBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) -1, (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer();
        int int11 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 10, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer(0, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.heapBuffer((int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 35 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator11 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator11.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator11.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel20 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel16, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel20.flushAndForceWrite(false);
        bufferedChannel20.flushAndForceWriteIfRegularFlush(true);
        int[] intArray30 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copyMedium(intArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray33 = new io.netty.buffer.ByteBuf[] { byteBuf31, byteBuf32 };
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray33);
        int int37 = bufferedChannel20.read(byteBuf35, (long) '4');
        int int39 = bufferedChannel9.read(byteBuf35, 0L);
        bufferedChannel9.flushAndForceWrite(false);
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.copyLong((long) (byte) 1);
        int int45 = bufferedChannel9.read(byteBuf43, (long) (byte) 0);
        java.lang.Class<?> wildcardClass46 = byteBuf43.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertArrayEquals(intArray30, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBufArray33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyShort((int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 52);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator22.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator22.ioBuffer();
        int int28 = unpooledByteBufAllocator22.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator22.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator22.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator22.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel33 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel33, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel33, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel33, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator43.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator43.ioBuffer();
        int int49 = unpooledByteBufAllocator43.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator43.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator43.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator43.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator43.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator58 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator59 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf61 = unpooledByteBufAllocator59.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator59.ioBuffer();
        int int65 = unpooledByteBufAllocator59.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf66 = unpooledByteBufAllocator59.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf67 = unpooledByteBufAllocator59.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator59.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel70 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel73 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator59, fileChannel70, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator58, fileChannel70, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator43, fileChannel70, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel70, (int) '4', (long) (short) 100);
        io.netty.buffer.ByteBuf byteBuf85 = unpooledByteBufAllocator1.directBuffer((int) (byte) 10);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(fileChannel33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator59);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf66);
        org.junit.Assert.assertNotNull(compositeByteBuf67);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertNotNull(fileChannel70);
        org.junit.Assert.assertNotNull(byteBuf85);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        int[] intArray28 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.copyMedium(intArray28);
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf29);
        int int32 = bufferedChannel9.read(byteBuf30, (long) (byte) -1);
        bufferedChannel9.flushAndForceWrite(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertArrayEquals(intArray28, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeDirectBuffer(10);
        java.lang.Class<?> wildcardClass14 = unpooledByteBufAllocator0.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) 'a', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (short) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        java.lang.Class<?> wildcardClass18 = byteBuf17.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) 'a');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel50 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel37, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        java.lang.Class<?> wildcardClass4 = unpooledByteBufAllocator2.getClass();
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        bufferedChannel14.flushAndForceWrite(false);
        java.nio.ByteBuffer[] byteBufferArray23 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray23);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray23);
        bufferedChannel14.write(byteBuf26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray23);
        org.junit.Assert.assertArrayEquals(byteBufferArray23, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator17.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator17.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator17.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric28 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric29 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        int int36 = unpooledByteBufAllocator30.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator30.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator30.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator44 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator44.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator44.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator44.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator44.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator44.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator54.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator54.ioBuffer();
        int int60 = unpooledByteBufAllocator54.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator54.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator54.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator54.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel65 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel65, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel65, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator44, fileChannel65, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel65, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel65, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel65, (int) (short) 10, (int) (short) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf87 = unpooledByteBufAllocator0.compositeDirectBuffer(100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric28);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator54);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(fileChannel65);
        org.junit.Assert.assertNotNull(compositeByteBuf87);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 98 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator2.directBuffer();
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, true);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int14 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 0 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer(10);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean11 = unpooledByteBufAllocator10.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel12 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel15 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel12, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel12, (int) ' ');
        java.lang.Class<?> wildcardClass18 = fileChannel12.getClass();
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileChannel12);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(97)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator33 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str34 = unpooledByteBufAllocator33.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator33.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator33.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator41.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator41.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel52, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel52, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator33, fileChannel52, (int) (byte) 0, 32, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel52, 52, (long) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf68 = unpooledByteBufAllocator0.compositeBuffer(52);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator0.buffer((int) 'a', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str34, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(fileChannel52);
        org.junit.Assert.assertNotNull(compositeByteBuf68);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[][] byteArray30 = new byte[][] { byteArray4, byteArray9, byteArray14, byteArray19, byteArray24, byteArray29 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copiedBuffer(byteArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray30);
        io.netty.buffer.ByteBuf byteBuf33 = io.netty.buffer.Unpooled.copiedBuffer(byteArray30);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertArrayEquals(byteArray4, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertArrayEquals(byteArray14, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertArrayEquals(byteArray24, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertArrayEquals(byteArray29, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator3.compositeDirectBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.heapBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (byte) 1);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str8 = unpooledByteBufAllocator7.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator11 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator11.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator11.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator11.directBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator11.heapBuffer();
        java.lang.String str17 = unpooledByteBufAllocator11.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator20 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator21.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator21.ioBuffer();
        int int27 = unpooledByteBufAllocator21.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator21.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator21.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator21.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel32 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel32, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator20, fileChannel32, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel32, (int) (byte) 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel32, (int) (byte) 10, (long) 64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel32, (int) ' ', (int) (byte) -1, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str8, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str17, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(fileChannel32);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        double[] doubleArray36 = new double[] { 1.0d, 'a', '#' };
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.copyDouble(doubleArray36);
        int int39 = bufferedChannel9.read(byteBuf37, (long) ' ');
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertArrayEquals(doubleArray36, new double[] { 1.0d, 97.0d, 35.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        short[] shortArray4 = new short[] { (short) 100, (short) 100, (short) -1, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyShort(shortArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(shortArray4);
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertArrayEquals(shortArray4, new short[] { (short) 100, (short) 100, (short) -1, (short) 0 });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf1 = io.netty.buffer.Unpooled.compositeBuffer((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 32, 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 64, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(64, 64)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf(100, (byte) -1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int10 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 1 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long14 = bufferedChannel9.position();
        int[] intArray19 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copyMedium(intArray19);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray22 = new io.netty.buffer.ByteBuf[] { byteBuf20, byteBuf21 };
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray22);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray22);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray22);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray22);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf26);
        int int29 = bufferedChannel9.read(byteBuf27, (long) (short) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertArrayEquals(intArray19, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBufArray22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((-1));
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator10.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel19 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel19, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel19, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator31.ioBuffer();
        int int37 = unpooledByteBufAllocator31.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator31.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator31.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf41 = unpooledByteBufAllocator31.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel42 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel42, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel42, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel42, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator52 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator52.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator52.ioBuffer();
        int int58 = unpooledByteBufAllocator52.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator52.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator52.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator52.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator52.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator67 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator68.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator68.ioBuffer();
        int int74 = unpooledByteBufAllocator68.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf75 = unpooledByteBufAllocator68.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf76 = unpooledByteBufAllocator68.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf78 = unpooledByteBufAllocator68.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel79 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel79, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel86 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator67, fileChannel79, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator52, fileChannel79, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel92 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel79, (int) '4', (long) (short) 100);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel95 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel79, (int) '#', (long) 100);
        io.netty.buffer.ByteBuf byteBuf96 = unpooledByteBufAllocator3.ioBuffer();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(fileChannel19);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf41);
        org.junit.Assert.assertNotNull(fileChannel42);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator52);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator68);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf75);
        org.junit.Assert.assertNotNull(compositeByteBuf76);
        org.junit.Assert.assertNotNull(compositeByteBuf78);
        org.junit.Assert.assertNotNull(fileChannel79);
        org.junit.Assert.assertNotNull(byteBuf96);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        boolean boolean23 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = unpooledByteBufAllocator0.calculateNewCapacity((int) 'a', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 97 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.buffer(10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf8);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        int int22 = unpooledByteBufAllocator16.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator16.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator16.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator16.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel27 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel30 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel27, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel27, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel27, (int) (byte) 1, 0L);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator0.heapBuffer((int) '#', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 35 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(fileChannel27);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 100, 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator2.heapBuffer(1, (int) (byte) 100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator2.metric();
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        bufferedChannel9.flushAndForceWrite(false);
        long long26 = bufferedChannel9.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        int int34 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        float[] floatArray39 = new float[] { 0L, (byte) 10, 0.0f, 10.0f };
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copyFloat(floatArray39);
        int int42 = bufferedChannel9.read(byteBuf40, 0L);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator43.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator43.ioBuffer();
        int int49 = unpooledByteBufAllocator43.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator43.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator43.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf53 = unpooledByteBufAllocator43.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric54 = unpooledByteBufAllocator43.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator43.compositeDirectBuffer();
        int int58 = unpooledByteBufAllocator43.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator59 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf61 = unpooledByteBufAllocator59.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator59.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator59.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator59.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf65 = unpooledByteBufAllocator59.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator69 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator69.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf72 = unpooledByteBufAllocator69.ioBuffer();
        int int75 = unpooledByteBufAllocator69.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf76 = unpooledByteBufAllocator69.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf77 = unpooledByteBufAllocator69.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf79 = unpooledByteBufAllocator69.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel80 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator69, fileChannel80, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel87 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel80, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel91 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator59, fileChannel80, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel94 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator43, fileChannel80, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf96 = unpooledByteBufAllocator43.heapBuffer((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = bufferedChannel9.read(byteBuf96, (long) 10, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=64)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertArrayEquals(floatArray39, new float[] { 0.0f, 10.0f, 0.0f, 10.0f }, (float) 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(compositeByteBuf53);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator59);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(byteBuf65);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator69);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf76);
        org.junit.Assert.assertNotNull(compositeByteBuf77);
        org.junit.Assert.assertNotNull(compositeByteBuf79);
        org.junit.Assert.assertNotNull(fileChannel80);
        org.junit.Assert.assertNotNull(byteBuf96);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.directBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.buffer(10, 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 32, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 33 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator33 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str34 = unpooledByteBufAllocator33.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator33.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator33.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator41.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator41.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel52, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel52, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator33, fileChannel52, (int) (byte) 0, 32, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel52, 52, (long) (byte) 100);
        bufferedChannel66.flushAndForceWriteIfRegularFlush(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str34, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(fileChannel52);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) 0, 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        long long52 = bufferedChannel51.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) '4', (int) (byte) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray9 = new byte[][] { byteArray8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray8, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        boolean[] booleanArray0 = new boolean[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyBoolean(booleanArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copyBoolean(booleanArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf2);
        org.junit.Assert.assertNotNull(booleanArray0);
        assertBooleanArrayEquals(booleanArray0, new boolean[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 100, 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.heapBuffer((int) (byte) 100);
        java.lang.Class<?> wildcardClass7 = unpooledByteBufAllocator1.getClass();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) (short) -1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator7.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator7.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel18 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel18, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel25 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel18, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel18, (int) (byte) 100, (int) (short) 10, 0L);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator3.directBuffer((int) ' ', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(fileChannel18);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeDirectBuffer(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, true);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric3 = unpooledByteBufAllocator2.metric();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric3);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray9 = new byte[][] { byteArray8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray8, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) 1, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 65 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str41 = unpooledByteBufAllocator40.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        int int46 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf42, 0L);
        bufferedChannel9.close();
        // The following exception was thrown during execution in test generation
        try {
            long long49 = bufferedChannel9.forceWrite(false);
            org.junit.Assert.fail("Expected exception of type java.nio.channels.ClosedChannelException; message: null");
        } catch (java.nio.channels.ClosedChannelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str41, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.buffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator12.compositeDirectBuffer();
        int int27 = unpooledByteBufAllocator12.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator28.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator28.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator28.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator38 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator38.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator38.ioBuffer();
        int int44 = unpooledByteBufAllocator38.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator38.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator38.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator38.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel49 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator38, fileChannel49, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel49, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel60 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel49, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel49, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel49, (int) 'a', (int) (short) 0, (long) '#');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator3.ioBuffer(10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator38);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(fileChannel49);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeDirectBuffer((int) ' ');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric14 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator15.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator15.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator15.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator15.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator15.ioBuffer(1, (int) (short) 100);
        java.lang.String str24 = unpooledByteBufAllocator15.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator15.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator29 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean30 = unpooledByteBufAllocator29.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel31 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator29, fileChannel31, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel31, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator15.compositeDirectBuffer();
        java.lang.String str39 = unpooledByteBufAllocator15.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        int int46 = unpooledByteBufAllocator40.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator40.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator40.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel51 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel54 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel51, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel57 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel51, (int) (byte) 100, (long) 32);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator58 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf60 = unpooledByteBufAllocator58.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf61 = unpooledByteBufAllocator58.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator62 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf64 = unpooledByteBufAllocator62.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf65 = unpooledByteBufAllocator62.ioBuffer();
        int int68 = unpooledByteBufAllocator62.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator62.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf70 = unpooledByteBufAllocator62.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf72 = unpooledByteBufAllocator62.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel73 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator62, fileChannel73, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator58, fileChannel73, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel84 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel73, 32, (int) '4', (long) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel87 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel73, (-1), (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileChannel31);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str39, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(fileChannel51);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator58);
        org.junit.Assert.assertNotNull(byteBuf60);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator62);
        org.junit.Assert.assertNotNull(byteBuf64);
        org.junit.Assert.assertNotNull(byteBuf65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertNotNull(compositeByteBuf70);
        org.junit.Assert.assertNotNull(compositeByteBuf72);
        org.junit.Assert.assertNotNull(fileChannel73);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        byte[] byteArray23 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray24 = new byte[][] { byteArray23 };
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray24);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray24);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.wrappedBuffer(1, byteArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = bufferedChannel9.read(byteBuf27, 100L, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=64)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertArrayEquals(byteArray23, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) 'a', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 149 out of bounds for byte[5]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator0.ioBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (byte) 1, (int) (byte) -1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator11 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator11.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator11.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel20 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel16, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel20.flushAndForceWrite(false);
        bufferedChannel20.flushAndForceWriteIfRegularFlush(true);
        int[] intArray30 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copyMedium(intArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray33 = new io.netty.buffer.ByteBuf[] { byteBuf31, byteBuf32 };
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray33);
        int int37 = bufferedChannel20.read(byteBuf35, (long) '4');
        int int39 = bufferedChannel9.read(byteBuf35, 0L);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertArrayEquals(intArray30, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBufArray33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long33 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) (short) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) 10, (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        bufferedChannel9.flush();
        bufferedChannel9.close();
        // The following exception was thrown during execution in test generation
        try {
            long long16 = bufferedChannel9.forceWrite(false);
            org.junit.Assert.fail("Expected exception of type java.nio.channels.ClosedChannelException; message: null");
        } catch (java.nio.channels.ClosedChannelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.buffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator12.compositeDirectBuffer();
        int int27 = unpooledByteBufAllocator12.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator28.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator28.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator28.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator38 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator38.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator38.ioBuffer();
        int int44 = unpooledByteBufAllocator38.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator38.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator38.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator38.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel49 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator38, fileChannel49, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel49, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel60 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel49, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel49, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel49, (int) 'a', (int) (short) 0, (long) '#');
        bufferedChannel67.flush();
        io.netty.buffer.ByteBuf byteBuf70 = io.netty.buffer.Unpooled.copyMedium((int) (short) 10);
        bufferedChannel67.write(byteBuf70);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator38);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(fileChannel49);
        org.junit.Assert.assertNotNull(byteBuf70);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator1.directBuffer(1);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator1.ioBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        bufferedChannel9.flushAndForceWrite(false);
        int[] intArray17 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copyMedium(intArray17);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray20 = new io.netty.buffer.ByteBuf[] { byteBuf18, byteBuf19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray20);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray20);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray20);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray20);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = bufferedChannel9.read(byteBuf24, 0L, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertArrayEquals(intArray17, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBufArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf12);
        java.lang.Class<?> wildcardClass14 = byteBuf13.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator22.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator22.ioBuffer();
        int int28 = unpooledByteBufAllocator22.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator22.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator22.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator22.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel33 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel33, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel33, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel33, (int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf43 = unpooledByteBufAllocator1.compositeDirectBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric44 = unpooledByteBufAllocator1.metric();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(fileChannel33);
        org.junit.Assert.assertNotNull(compositeByteBuf43);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric44);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator11 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator11.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator11.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel20 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel16, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel20.flushAndForceWrite(false);
        bufferedChannel20.flushAndForceWriteIfRegularFlush(true);
        int[] intArray30 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copyMedium(intArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray33 = new io.netty.buffer.ByteBuf[] { byteBuf31, byteBuf32 };
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray33);
        int int37 = bufferedChannel20.read(byteBuf35, (long) '4');
        int int39 = bufferedChannel9.read(byteBuf35, 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.close();
        // The following exception was thrown during execution in test generation
        try {
            long long43 = bufferedChannel9.size();
            org.junit.Assert.fail("Expected exception of type org.apache.bookkeeper.bookie.BufferedChannelBase.BufferedChannelClosedException; message: Attempting to access a file channel that has already been closed");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertArrayEquals(intArray30, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBufArray33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer(64, (int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        long long38 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray42 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray42);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufferArray42);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.wrappedBuffer(1, byteBufferArray42);
        bufferedChannel9.write(byteBuf46);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray42);
        org.junit.Assert.assertArrayEquals(byteBufferArray42, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator7.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator7.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel18 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel18, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel25 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel18, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel18, (int) (byte) 100, (int) (short) 10, 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator3.compositeHeapBuffer((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator3.ioBuffer(1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 1 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(fileChannel18);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator0.compositeHeapBuffer(32);
        io.netty.buffer.ByteBuf byteBuf61 = unpooledByteBufAllocator0.heapBuffer((int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(byteBuf61);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        boolean[] booleanArray0 = new boolean[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyBoolean(booleanArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(booleanArray0);
        assertBooleanArrayEquals(booleanArray0, new boolean[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf58 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf57);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(100, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((-1), (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer(64);
        java.lang.String str7 = unpooledByteBufAllocator0.toString();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str7, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (short) -1, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel27.flushAndForceWrite(false);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray38 = new byte[][] { byteArray37 };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray38);
        int int41 = bufferedChannel27.read(byteBuf39, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        int int49 = bufferedChannel27.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (short) 1);
        int int51 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (byte) 10);
        bufferedChannel14.close();
        bufferedChannel14.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray37, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator2.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator4.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator4.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator4.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel25, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator2, fileChannel25, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator2.directBuffer();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(byteBuf39);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator0.ioBuffer(52);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator35 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator35.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator35.ioBuffer();
        int int41 = unpooledByteBufAllocator35.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator35.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator35.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator35.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator35.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator35.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator49.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator49.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator49.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator49.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator49.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator59 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf61 = unpooledByteBufAllocator59.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator59.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel64 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator59, fileChannel64, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel64, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator35, fileChannel64, (int) (short) 0, (int) (short) 0, (long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel64, (int) (byte) 0, (int) (short) -1, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator35);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator59);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(fileChannel64);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        bufferedChannel22.clear();
        long long24 = bufferedChannel22.getFileChannelPosition();
        long long25 = bufferedChannel22.size();
        long long26 = bufferedChannel22.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray10 = new byte[][] { byteArray9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf14);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(32, byteBufArray9);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        int int12 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.buffer((int) '4', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 52 (expected: not greater than maxCapacity(32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(1, 100)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 35 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) '#', (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 32 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator3.compositeHeapBuffer(100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.buffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (short) 10, (int) ' ', true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer((int) ' ');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) '#');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(2L, 1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 0, (int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: source index -1 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf4);
        java.lang.Class<?> wildcardClass7 = byteBuf4.getClass();
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer(0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0, 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer(64);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        int[] intArray1 = new int[] { 32 };
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copyShort(intArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copyShort(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertArrayEquals(intArray1, new int[] { 32 });
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((-1), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator8 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator8.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator8.ioBuffer();
        int int14 = unpooledByteBufAllocator8.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator8.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator8.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator8.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel19 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator8, fileChannel19, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel26 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel19, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel30 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel19, (int) (byte) 0, 32, (long) 64);
        bufferedChannel30.flush();
        long long32 = bufferedChannel30.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(fileChannel19);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable(64);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator1.heapBuffer((int) (byte) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric14 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric14);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator0.directBuffer((int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int12 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 10 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        io.netty.buffer.ByteBuf[] byteBufArray2 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray2);
        org.junit.Assert.assertNotNull(byteBufArray2);
        org.junit.Assert.assertArrayEquals(byteBufArray2, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        int int10 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator13.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator18.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator18.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator22.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator22.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel27 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel27, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel27, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator38 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator39.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator39.ioBuffer();
        int int45 = unpooledByteBufAllocator39.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator39.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator39.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator39.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel50 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel53 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel50, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel57 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator38, fileChannel50, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel50, (int) (short) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel50, 1, 1, (long) (byte) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel50, 100, (long) (short) 1);
        io.netty.buffer.ByteBuf byteBuf68 = unpooledByteBufAllocator0.directBuffer(52);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(fileChannel27);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(fileChannel50);
        org.junit.Assert.assertNotNull(byteBuf68);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flush();
        int int15 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long17 = bufferedChannel9.forceWrite(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        bufferedChannel9.flush();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator25.ioBuffer((int) (short) 0, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = bufferedChannel9.read(byteBuf29, (long) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf29);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer((int) 'a');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator2.compositeBuffer();
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long14 = bufferedChannel9.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        boolean boolean14 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) '#');
        java.lang.String str15 = unpooledByteBufAllocator0.toString();
        boolean boolean16 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str15, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (byte) 10, 0);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5, (int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 5, cap: 5/5).slice(100, 35)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.buffer((int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator13.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator27.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator27.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator37.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel48 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel48, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel48, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel48, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel48, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel48, (int) (short) 10);
        long long65 = bufferedChannel64.position();
        long long66 = bufferedChannel64.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(fileChannel48);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 1, 52, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flushAndForceWrite(false);
        int[] intArray18 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copyMedium(intArray18);
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copyInt(intArray18);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.copyShort(intArray18);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.copyInt(intArray18);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copyInt(intArray18);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = bufferedChannel9.read(byteBuf23, (-1L), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertArrayEquals(intArray18, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (byte) 10, 0);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (short) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 98 out of bounds for byte[5]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        java.lang.Class<?> wildcardClass15 = unpooledByteBufAllocator0.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel27.flushAndForceWrite(false);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray38 = new byte[][] { byteArray37 };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray38);
        int int41 = bufferedChannel27.read(byteBuf39, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        int int49 = bufferedChannel27.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (short) 1);
        int int51 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf53 = io.netty.buffer.Unpooled.copyInt((int) (short) -1);
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf53);
        int int56 = bufferedChannel14.read(byteBuf54, (long) (-1));
        long long57 = bufferedChannel14.size();
        bufferedChannel14.close();
        // The following exception was thrown during execution in test generation
        try {
            long long59 = bufferedChannel14.size();
            org.junit.Assert.fail("Expected exception of type org.apache.bookkeeper.bookie.BufferedChannelBase.BufferedChannelClosedException; message: Attempting to access a file channel that has already been closed");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray37, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable((int) (byte) 0);
        java.lang.Class<?> wildcardClass2 = byteBuf1.getClass();
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer((int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        bufferedChannel22.close();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel22.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator9.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator9.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator9.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator19.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel24 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel24, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel24, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel24, 1, 1L);
        bufferedChannel34.close();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(fileChannel24);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator13.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator27.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator27.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator37.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel48 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel48, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel48, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel48, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel48, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel48, (int) (short) 10);
        long long65 = bufferedChannel64.position();
        bufferedChannel64.flushAndForceWriteIfRegularFlush(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(fileChannel48);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(100, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 32, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 129 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.ioBuffer((int) (byte) 0, 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.directBuffer((int) '#', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 35 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer((int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator12.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator12.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        int int34 = unpooledByteBufAllocator28.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator28.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator28.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator28.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel39 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel39, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel39, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel39, (int) (byte) 1, 0L);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean54 = unpooledByteBufAllocator53.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel55 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel55, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel60 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel55, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator63 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator64 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf66 = unpooledByteBufAllocator64.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator64.ioBuffer();
        int int70 = unpooledByteBufAllocator64.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf71 = unpooledByteBufAllocator64.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf72 = unpooledByteBufAllocator64.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf74 = unpooledByteBufAllocator64.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel75 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator64, fileChannel75, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator63, fileChannel75, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel86 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel75, (int) (short) 1, (int) (short) 10, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel75, 0, (long) (short) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf90 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(fileChannel39);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fileChannel55);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator64);
        org.junit.Assert.assertNotNull(byteBuf66);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf71);
        org.junit.Assert.assertNotNull(compositeByteBuf72);
        org.junit.Assert.assertNotNull(compositeByteBuf74);
        org.junit.Assert.assertNotNull(fileChannel75);
        org.junit.Assert.assertNotNull(compositeByteBuf90);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str7 = unpooledByteBufAllocator6.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator6.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator6.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel25, (int) (byte) 0, 32, (long) 64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (-1), (long) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str7, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) 52);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        java.lang.Class<?> wildcardClass10 = unpooledByteBufAllocator0.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        int int22 = unpooledByteBufAllocator16.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator16.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator16.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator16.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel27 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel30 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel27, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel27, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel27, (int) (byte) 1, 0L);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean42 = unpooledByteBufAllocator41.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel43 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel43, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel43, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator51 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator52 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator52.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator52.ioBuffer();
        int int58 = unpooledByteBufAllocator52.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator52.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator52.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator52.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel63 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator52, fileChannel63, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator51, fileChannel63, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel63, (int) (short) 1, (int) (short) 10, 0L);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = unpooledByteBufAllocator0.calculateNewCapacity(0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 0 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(fileChannel27);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileChannel43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator52);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(fileChannel63);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator22.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator22.ioBuffer();
        int int28 = unpooledByteBufAllocator22.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator22.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator22.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator22.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel33 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel33, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel33, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel33, (int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf43 = unpooledByteBufAllocator1.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator1.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator1.buffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(fileChannel33);
        org.junit.Assert.assertNotNull(compositeByteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator3.compositeDirectBuffer();
        boolean boolean9 = unpooledByteBufAllocator3.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator3.compositeDirectBuffer(1);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (byte) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(0, 32)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator42.heapBuffer();
        bufferedChannel9.write(byteBuf43);
        bufferedChannel9.flush();
        long long46 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray10 = new byte[][] { byteArray9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(0, byteArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf14);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf14);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric8 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.ioBuffer(10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (-1), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: source index -1 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator7.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator7.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric18 = unpooledByteBufAllocator7.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric19 = unpooledByteBufAllocator7.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator20 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator20.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator20.ioBuffer();
        int int26 = unpooledByteBufAllocator20.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator20.buffer();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator20.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator20.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator20.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator20.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator20.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator34 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator34.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator34.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator34.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator34.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator34.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator44 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator44.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator44.ioBuffer();
        int int50 = unpooledByteBufAllocator44.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator44.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator44.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator44.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel55 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator44, fileChannel55, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator43, fileChannel55, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator34, fileChannel55, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator20, fileChannel55, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel55, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel55, 100, (long) (short) 1);
        long long76 = bufferedChannel74.forceWrite(true);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric18);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric19);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator34);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
        org.junit.Assert.assertNotNull(fileChannel55);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf9);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator25.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator39.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator39.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator39.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator39.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator39.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator48 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator49.ioBuffer();
        int int55 = unpooledByteBufAllocator49.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator49.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator49.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator49.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel60 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel60, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator48, fileChannel60, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel60, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel60, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel60, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel60, 100, (int) (byte) 100, (long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf83 = unpooledByteBufAllocator0.ioBuffer(10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(fileChannel60);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.heapBuffer();
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator29 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator29.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator29.ioBuffer(10);
        boolean boolean34 = unpooledByteBufAllocator29.isDirectBufferPooled();
        boolean boolean35 = unpooledByteBufAllocator29.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator29.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator37.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric48 = unpooledByteBufAllocator37.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator37.compositeDirectBuffer();
        int int52 = unpooledByteBufAllocator37.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator53.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator53.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator53.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator53.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf59 = unpooledByteBufAllocator53.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator62 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator63 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf65 = unpooledByteBufAllocator63.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf66 = unpooledByteBufAllocator63.ioBuffer();
        int int69 = unpooledByteBufAllocator63.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf70 = unpooledByteBufAllocator63.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf71 = unpooledByteBufAllocator63.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf73 = unpooledByteBufAllocator63.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel74 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator63, fileChannel74, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator62, fileChannel74, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel74, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel88 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel74, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel90 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator29, fileChannel74, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel93 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel74, 64, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel96 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel74, (int) (byte) 1, (long) 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel99 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel74, 52, (long) (byte) -1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator29);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator53);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator63);
        org.junit.Assert.assertNotNull(byteBuf65);
        org.junit.Assert.assertNotNull(byteBuf66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf70);
        org.junit.Assert.assertNotNull(compositeByteBuf71);
        org.junit.Assert.assertNotNull(compositeByteBuf73);
        org.junit.Assert.assertNotNull(fileChannel74);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat(100.0f);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable(32);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer((int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) '#', (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) ' ', 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(32, 32)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer(64, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 64 (expected: not greater than maxCapacity(35)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.directBuffer((int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 52 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(52, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.buffer((int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf14);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf14);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf16);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer(64);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer(10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf(10, (byte) -1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(-1, 10)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long11 = bufferedChannel9.forceWrite(true);
        double[] doubleArray15 = new double[] { 1.0d, 'a', '#' };
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.copyDouble(doubleArray15);
        int int19 = bufferedChannel9.read(byteBuf16, (long) '#', 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertArrayEquals(doubleArray15, new double[] { 1.0d, 97.0d, 35.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        bufferedChannel9.flushAndForceWrite(false);
        long long13 = bufferedChannel9.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str15 = unpooledByteBufAllocator14.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.heapBuffer();
        bufferedChannel9.write(byteBuf17);
        bufferedChannel9.flushAndForceWrite(true);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator21.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator21.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator21.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator21.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator21.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator21.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator21.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator21.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator21.compositeBuffer(10);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf35, (long) (short) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str15, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 100, (-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric14 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator15.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator15.ioBuffer();
        int int21 = unpooledByteBufAllocator15.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator15.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator15.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator15.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric26 = unpooledByteBufAllocator15.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator15.compositeDirectBuffer();
        int int30 = unpooledByteBufAllocator15.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator31.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator31.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator31.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator31.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator41.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator41.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel52, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel52, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel52, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel52, 1, (-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel52, (int) (byte) 1, (int) (short) -1, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric26);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(fileChannel52);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        io.netty.buffer.ByteBuf byteBuf0 = io.netty.buffer.Unpooled.directBuffer();
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf0);
        org.junit.Assert.assertNotNull(byteBuf0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copyShort((int) '4');
        int int40 = bufferedChannel9.read(byteBuf38, 0L);
        int int41 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        long long37 = bufferedChannel9.getFileChannelPosition();
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int22 = unpooledByteBufAllocator0.calculateNewCapacity(10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator13.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator27.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator27.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator37.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel48 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel48, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel48, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel48, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel48, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel48, (int) (short) 10);
        long long65 = bufferedChannel64.position();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator66 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf68 = unpooledByteBufAllocator66.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf69 = unpooledByteBufAllocator66.ioBuffer();
        int int72 = unpooledByteBufAllocator66.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf73 = unpooledByteBufAllocator66.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf74 = unpooledByteBufAllocator66.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf76 = unpooledByteBufAllocator66.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel77 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator66, fileChannel77, 1, (long) (byte) 0);
        byte[] byteArray84 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf85 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray84);
        io.netty.buffer.ByteBuf byteBuf86 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray84);
        io.netty.buffer.ByteBuf byteBuf87 = io.netty.buffer.Unpooled.copiedBuffer(byteArray84);
        io.netty.buffer.ByteBuf byteBuf88 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray84);
        io.netty.buffer.ByteBuf byteBuf89 = io.netty.buffer.Unpooled.copiedBuffer(byteArray84);
        io.netty.buffer.ByteBuf byteBuf90 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray84);
        io.netty.buffer.ByteBuf byteBuf91 = io.netty.buffer.Unpooled.copiedBuffer(byteArray84);
        bufferedChannel80.write(byteBuf91);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = bufferedChannel64.read(byteBuf91, (long) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=97)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(fileChannel48);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator66);
        org.junit.Assert.assertNotNull(byteBuf68);
        org.junit.Assert.assertNotNull(byteBuf69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf73);
        org.junit.Assert.assertNotNull(compositeByteBuf74);
        org.junit.Assert.assertNotNull(compositeByteBuf76);
        org.junit.Assert.assertNotNull(fileChannel77);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertArrayEquals(byteArray84, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf85);
        org.junit.Assert.assertNotNull(byteBuf86);
        org.junit.Assert.assertNotNull(byteBuf87);
        org.junit.Assert.assertNotNull(byteBuf88);
        org.junit.Assert.assertNotNull(byteBuf89);
        org.junit.Assert.assertNotNull(byteBuf90);
        org.junit.Assert.assertNotNull(byteBuf91);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer((int) ' ');
        java.lang.Class<?> wildcardClass14 = compositeByteBuf13.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyInt(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator13.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator27.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator27.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator37.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel48 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel48, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel48, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel48, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel48, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel48, (int) (short) 10);
        long long65 = bufferedChannel64.position();
        long long66 = bufferedChannel64.size();
        bufferedChannel64.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(fileChannel48);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        bufferedChannel35.clear();
        io.netty.buffer.ByteBuf[] byteBufArray37 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray37);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray37);
        int int42 = bufferedChannel35.read(byteBuf39, (long) '4', (-1));
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator43.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator43.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator43.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator43.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator43.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator43.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator43.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator43.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator43.compositeBuffer(10);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = bufferedChannel35.read((io.netty.buffer.ByteBuf) compositeByteBuf57, 2L, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(byteBufArray37);
        org.junit.Assert.assertArrayEquals(byteBufArray37, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 97 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) ' ');
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeDirectBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        long long16 = bufferedChannel14.forceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.ByteBuf[] byteBufArray19 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray19);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray19);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray19);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray19);
        int int26 = bufferedChannel14.read(byteBuf23, (long) (short) 0, (int) (short) -1);
        byte[] byteArray27 = new byte[] {};
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray27);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf28);
        int int31 = bufferedChannel14.read(byteBuf29, (long) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteBufArray19);
        org.junit.Assert.assertArrayEquals(byteBufArray19, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertArrayEquals(byteArray27, new byte[] {});
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf6);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(64, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        byte[] byteArray4 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 };
        byte[][] byteArray30 = new byte[][] { byteArray4, byteArray9, byteArray14, byteArray19, byteArray24, byteArray29 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copiedBuffer(byteArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.copiedBuffer(byteArray30);
        io.netty.buffer.ByteBuf byteBuf33 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray30);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertArrayEquals(byteArray4, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertArrayEquals(byteArray14, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertArrayEquals(byteArray24, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertArrayEquals(byteArray29, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) 1 });
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        java.lang.String str7 = unpooledByteBufAllocator3.toString();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer();
        int int11 = unpooledByteBufAllocator3.calculateNewCapacity((int) (byte) 0, 52);
        java.lang.String str12 = unpooledByteBufAllocator3.toString();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str7, "UnpooledByteBufAllocator(directByDefault: false)");
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: false)");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        short[] shortArray5 = new short[] { (byte) -1, (short) -1, (short) 1, (byte) 10, (short) 100 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(shortArray5);
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertArrayEquals(shortArray5, new short[] { (short) -1, (short) -1, (short) 1, (short) 10, (short) 100 });
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        int int38 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeDirectBuffer(64);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.directBuffer((int) (byte) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable((int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyInt(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        int int12 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel14 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel14, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator2, fileChannel14, 100, (int) (short) 0, (long) (-1));
        int int22 = bufferedChannel21.getNumOfBytesInWriteBuffer();
        bufferedChannel21.close();
        int int24 = bufferedChannel21.getNumOfBytesInWriteBuffer();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel21.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(fileChannel14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer((int) ' ');
        int int13 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.ioBuffer(64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(false);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator1.heapBuffer(100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator4.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator4.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator4.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel25, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel25, 64, (long) (byte) 10);
        long long40 = bufferedChannel39.size();
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flushAndForceWrite(false);
        long long15 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.copyMedium(32);
        bufferedChannel9.write(byteBuf39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf39);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.close();
        byte[] byteArray22 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray23 = new byte[][] { byteArray22 };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copiedBuffer(byteArray23);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray23);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray23);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf27);
        int int30 = bufferedChannel9.read(byteBuf28, 100L);
        int[] intArray37 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copyMedium(intArray37);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray40 = new io.netty.buffer.ByteBuf[] { byteBuf38, byteBuf39 };
        io.netty.buffer.ByteBuf byteBuf41 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray40);
        io.netty.buffer.ByteBuf byteBuf42 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray40);
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray40);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray40);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray40);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray40);
        int int48 = bufferedChannel9.read(byteBuf46, (long) '4');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray22, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertArrayEquals(intArray37, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBufArray40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator0.buffer(64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator0.compositeDirectBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator0.heapBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf21);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteBuf24);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeDirectBuffer((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.ioBuffer((int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator13.ioBuffer(10);
        boolean boolean18 = unpooledByteBufAllocator13.isDirectBufferPooled();
        boolean boolean19 = unpooledByteBufAllocator13.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator21.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator21.ioBuffer();
        int int27 = unpooledByteBufAllocator21.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator21.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator21.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator21.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric32 = unpooledByteBufAllocator21.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator21.compositeDirectBuffer();
        int int36 = unpooledByteBufAllocator21.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator37.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator37.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator46 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator47 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf49 = unpooledByteBufAllocator47.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator47.ioBuffer();
        int int53 = unpooledByteBufAllocator47.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator47.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator47.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator47.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel58 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator47, fileChannel58, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator46, fileChannel58, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel58, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel58, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel58, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel58, 64, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel58, (int) (byte) 1, (long) 32);
        io.netty.buffer.CompositeByteBuf compositeByteBuf82 = unpooledByteBufAllocator0.compositeDirectBuffer((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf85 = unpooledByteBufAllocator0.heapBuffer((-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator47);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(fileChannel58);
        org.junit.Assert.assertNotNull(compositeByteBuf82);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        long long16 = bufferedChannel14.forceWrite(true);
        long long18 = bufferedChannel14.forceWrite(true);
        bufferedChannel14.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeDirectBuffer(10);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer(10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.buffer(100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer((int) (short) 10, 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer((int) ' ', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) 10, (int) '4');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) '4', 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(64, byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf14);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        long[] longArray2 = new long[] { (short) 10, 0L };
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copyLong(longArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyLong(longArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyLong(longArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyLong(longArray2);
        java.lang.Class<?> wildcardClass7 = byteBuf6.getClass();
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertArrayEquals(longArray2, new long[] { 10L, 0L });
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer();
        boolean boolean15 = unpooledByteBufAllocator0.isDirectBufferPooled();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.ioBuffer(100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (byte) 10, 0);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, 32, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 33 out of bounds for byte[5]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray35 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf37);
        int int41 = bufferedChannel9.read(byteBuf37, (long) 0, (int) (byte) 0);
        bufferedChannel9.clear();
        long long44 = bufferedChannel9.forceWrite(true);
        byte[] byteArray54 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray55 = new byte[][] { byteArray54 };
        io.netty.buffer.ByteBuf byteBuf56 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray55);
        io.netty.buffer.ByteBuf byteBuf57 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray55);
        io.netty.buffer.ByteBuf byteBuf58 = io.netty.buffer.Unpooled.copiedBuffer(byteArray55);
        io.netty.buffer.ByteBuf byteBuf59 = io.netty.buffer.Unpooled.copiedBuffer(byteArray55);
        io.netty.buffer.ByteBuf byteBuf60 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteArray55);
        io.netty.buffer.ByteBuf byteBuf61 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray55);
        io.netty.buffer.ByteBuf byteBuf62 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray55);
        bufferedChannel9.write(byteBuf62);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray35);
        org.junit.Assert.assertArrayEquals(byteBufferArray35, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertArrayEquals(byteArray54, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertNotNull(byteBuf60);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(byteBuf62);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (byte) 100, (byte) 0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(10, (int) '#');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 10, byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.ioBuffer((int) (byte) 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flush();
        bufferedChannel9.close();
        bufferedChannel9.close();
        byte[] byteArray24 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray25 = new byte[][] { byteArray24 };
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray25);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.copiedBuffer(byteArray25);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray25);
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel9.write(byteBuf28);
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertArrayEquals(byteArray24, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator1.directBuffer(100);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator1.buffer(32, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((-1), (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        java.lang.String str36 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric38 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str36, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric38);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        boolean boolean36 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        byte[] byteArray0 = new byte[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray0, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertArrayEquals(byteArray0, new byte[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf11);
        double[] doubleArray18 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copyDouble(doubleArray18);
        int[] intArray23 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copyInt(intArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyShort(intArray23);
        io.netty.buffer.ByteBuf[] byteBufArray26 = new io.netty.buffer.ByteBuf[] { byteBuf1, byteBuf11, byteBuf19, byteBuf25 };
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertArrayEquals(intArray23, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean10 = unpooledByteBufAllocator9.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel11, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator15.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator15.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator15.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator15.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator15.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator15.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator25.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel30 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel30, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel30, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel30, 1, 1L);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel30, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(fileChannel30);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.directBuffer((int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.heapBuffer(32, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) 'a');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        long long36 = bufferedChannel9.getFileChannelPosition();
        bufferedChannel9.close();
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator2.directBuffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) 100, (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copyShort(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 52 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 10, 100, (long) 1);
        java.nio.ByteBuffer[] byteBufferArray36 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray36);
        bufferedChannel32.write(byteBuf40);
        bufferedChannel32.close();
        bufferedChannel32.clear();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel32.flushAndForceWriteIfRegularFlush(false);
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(byteBufferArray36);
        org.junit.Assert.assertArrayEquals(byteBufferArray36, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((-1), (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (byte) 1, (int) (short) 0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(52, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        bufferedChannel9.flush();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf28);
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf28);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = bufferedChannel9.read(byteBuf28, (long) (short) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minWritableBytes : -100 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        short[] shortArray0 = new short[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyShort(shortArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copyShort(shortArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copyShort(shortArray0);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyShort(shortArray0);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf4);
        org.junit.Assert.assertNotNull(shortArray0);
        org.junit.Assert.assertArrayEquals(shortArray0, new short[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(0, 100)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) '#', 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(35, 64)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) '4', (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator25.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel36 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel36, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel36, (int) (byte) 100, (long) 32);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(fileChannel36);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong(100L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel27.flushAndForceWrite(false);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray38 = new byte[][] { byteArray37 };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray38);
        int int41 = bufferedChannel27.read(byteBuf39, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        int int49 = bufferedChannel27.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (short) 1);
        int int51 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf53 = io.netty.buffer.Unpooled.copyInt((int) (short) -1);
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf53);
        int int56 = bufferedChannel14.read(byteBuf54, (long) (-1));
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator57 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf59 = unpooledByteBufAllocator57.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf60 = unpooledByteBufAllocator57.ioBuffer();
        int int63 = unpooledByteBufAllocator57.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator57.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf65 = unpooledByteBufAllocator57.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf67 = unpooledByteBufAllocator57.compositeBuffer(100);
        io.netty.buffer.ByteBuf byteBuf68 = io.netty.buffer.Unpooled.unreleasableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf67, (long) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray37, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator57);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertNotNull(byteBuf60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(compositeByteBuf65);
        org.junit.Assert.assertNotNull(compositeByteBuf67);
        org.junit.Assert.assertNotNull(byteBuf68);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        java.lang.String str10 = unpooledByteBufAllocator0.toString();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer(100);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = unpooledByteBufAllocator0.calculateNewCapacity((int) '4', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 52 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.heapBuffer(32);
        java.lang.String str14 = unpooledByteBufAllocator0.toString();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str14, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 10, 100, (long) 1);
        bufferedChannel32.clear();
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray39);
        io.netty.buffer.ByteBuf byteBuf41 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray39);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.copiedBuffer(byteArray39, (int) (byte) 10, 0);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray39);
        bufferedChannel32.write(byteBuf45);
        bufferedChannel32.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertArrayEquals(byteArray39, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        bufferedChannel22.close();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str25 = unpooledByteBufAllocator24.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator24.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator24.compositeDirectBuffer();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = bufferedChannel22.read((io.netty.buffer.ByteBuf) compositeByteBuf27, (long) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str25, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer(1, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100);
        boolean boolean13 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.ioBuffer((int) '#', (int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(52, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(64, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        bufferedChannel35.clear();
        bufferedChannel35.flushAndForceWrite(true);
        bufferedChannel35.clear();
        bufferedChannel35.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray9);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 0, byteBufArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator3.compositeHeapBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        long long38 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf10);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray35 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf37);
        int int41 = bufferedChannel9.read(byteBuf37, (long) 0, (int) (byte) 0);
        bufferedChannel9.clear();
        bufferedChannel9.flushAndForceWrite(false);
        long long45 = bufferedChannel9.getFileChannelPosition();
        float[] floatArray48 = new float[] { 1L, (-1.0f) };
        io.netty.buffer.ByteBuf byteBuf49 = io.netty.buffer.Unpooled.copyFloat(floatArray48);
        io.netty.buffer.ByteBuf byteBuf50 = io.netty.buffer.Unpooled.copyFloat(floatArray48);
        io.netty.buffer.ByteBuf byteBuf51 = io.netty.buffer.Unpooled.copyFloat(floatArray48);
        io.netty.buffer.ByteBuf byteBuf52 = io.netty.buffer.Unpooled.copyFloat(floatArray48);
        io.netty.buffer.ByteBuf byteBuf53 = io.netty.buffer.Unpooled.copyFloat(floatArray48);
        bufferedChannel9.write(byteBuf53);
        bufferedChannel9.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray35);
        org.junit.Assert.assertArrayEquals(byteBufferArray35, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertArrayEquals(floatArray48, new float[] { 1.0f, (-1.0f) }, (float) 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf53);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        int int25 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 100, 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(false);
        int int16 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt(1);
        java.lang.Class<?> wildcardClass2 = byteBuf1.getClass();
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(false);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copyDouble((double) 100L);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf17);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = bufferedChannel9.read(byteBuf17, (long) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flush();
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 10, byteArray11);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.buffer((int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer(10);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.directBuffer((int) '4', 52);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.ioBuffer(10);
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) 10L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        boolean boolean24 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteBuf25);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt((int) '4');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        io.netty.buffer.ByteBuf[] byteBufArray2 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(10, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        org.junit.Assert.assertNotNull(byteBufArray2);
        org.junit.Assert.assertArrayEquals(byteBufArray2, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator0.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium(1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator22.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator22.ioBuffer();
        int int28 = unpooledByteBufAllocator22.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator22.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator22.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator22.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel33 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel33, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel33, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel33, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator43.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator43.ioBuffer();
        int int49 = unpooledByteBufAllocator43.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator43.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator43.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator43.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator43.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator58 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator59 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf61 = unpooledByteBufAllocator59.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator59.ioBuffer();
        int int65 = unpooledByteBufAllocator59.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf66 = unpooledByteBufAllocator59.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf67 = unpooledByteBufAllocator59.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator59.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel70 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel73 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator59, fileChannel70, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator58, fileChannel70, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator43, fileChannel70, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel70, (int) '4', (long) (short) 100);
        long long84 = bufferedChannel83.position();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(fileChannel33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator59);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf66);
        org.junit.Assert.assertNotNull(compositeByteBuf67);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertNotNull(fileChannel70);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (short) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf14);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.heapBuffer();
        int int10 = unpooledByteBufAllocator3.calculateNewCapacity((int) (byte) 0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.buffer(100);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((int) '4');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer((-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 100, (int) (short) 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf11);
        double[] doubleArray18 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copyDouble(doubleArray18);
        int[] intArray23 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copyInt(intArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyShort(intArray23);
        io.netty.buffer.ByteBuf[] byteBufArray26 = new io.netty.buffer.ByteBuf[] { byteBuf1, byteBuf11, byteBuf19, byteBuf25 };
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray26);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray26);
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0, decrement: 1");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertArrayEquals(intArray23, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        int[] intArray4 = new int[] { 0, (byte) 100, ' ', ' ' };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, 100, 32, 32 });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator2.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeHeapBuffer(52);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 32, 0);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 52, (int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) 0, 0);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 64, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(64, 35)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((int) 'a');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        io.netty.buffer.ByteBuf[] byteBufArray1 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        org.junit.Assert.assertNotNull(byteBufArray1);
        org.junit.Assert.assertArrayEquals(byteBufArray1, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) '4', (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long21 = bufferedChannel14.forceWrite(true);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = io.netty.buffer.UnpooledByteBufAllocator.DEFAULT;
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator22.compositeDirectBuffer();
        int int25 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf23, (long) (-1));
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator26.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator26.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator26.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator26.buffer((int) (byte) 0);
        int int42 = bufferedChannel14.read(byteBuf40, (long) 100);
        bufferedChannel14.flushAndForceWriteIfRegularFlush(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.buffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator12.compositeDirectBuffer();
        int int27 = unpooledByteBufAllocator12.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator28.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator28.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator28.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator38 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator38.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator38.ioBuffer();
        int int44 = unpooledByteBufAllocator38.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator38.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator38.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator38.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel49 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator38, fileChannel49, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel49, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel60 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel49, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel49, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel49, (int) 'a', (int) (short) 0, (long) '#');
        io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator3.buffer((int) '4', 64);
        io.netty.buffer.ByteBuf byteBuf71 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf70);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator38);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(fileChannel49);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf71);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(0, (int) (short) 0);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator4.directBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator4.heapBuffer();
        java.lang.String str10 = unpooledByteBufAllocator4.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel25, (int) (byte) 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) (byte) 10, (long) 64);
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator0.ioBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(byteBuf39);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray10 = new byte[][] { byteArray9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.wrappedBuffer(52, byteArray10);
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer(4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator0.ioBuffer(52);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator35 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str36 = unpooledByteBufAllocator35.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator35.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator35.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator35.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator35.directBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator35.buffer((int) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator45 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator45.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator45.ioBuffer();
        int int51 = unpooledByteBufAllocator45.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator45.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf53 = unpooledByteBufAllocator45.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator45.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator45.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator60 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator61 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator61.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf64 = unpooledByteBufAllocator61.ioBuffer();
        int int67 = unpooledByteBufAllocator61.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf68 = unpooledByteBufAllocator61.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator61.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf71 = unpooledByteBufAllocator61.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel72 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator61, fileChannel72, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator60, fileChannel72, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator45, fileChannel72, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator35, fileChannel72, (int) (short) 0, 2L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel88 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel72, (int) (short) 1, (long) (byte) -1);
        long long89 = bufferedChannel88.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str36, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator45);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertNotNull(compositeByteBuf53);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator61);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(byteBuf64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf68);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertNotNull(compositeByteBuf71);
        org.junit.Assert.assertNotNull(fileChannel72);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 10, byteArray11);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        java.lang.String str10 = unpooledByteBufAllocator0.toString();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator13.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator13.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator26.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator40.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator40.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator40.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator50 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator50.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator50.ioBuffer();
        int int56 = unpooledByteBufAllocator50.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator50.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator50.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator50.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel61 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator50, fileChannel61, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel61, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel61, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel61, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel61, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel61, 52, (long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf83 = unpooledByteBufAllocator0.directBuffer((int) (byte) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator50);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(fileChannel61);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 1, byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer(0, 0);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.ioBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        bufferedChannel9.close();
        long long41 = bufferedChannel9.position();
        int int42 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 0, 32, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long14 = bufferedChannel9.getFileChannelPosition();
        long long15 = bufferedChannel9.size();
        long long16 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator5.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        int int15 = unpooledByteBufAllocator9.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator9.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator9.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel20 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel20, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel20, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel20, (int) (short) 1);
        long long31 = bufferedChannel29.forceWrite(false);
        io.netty.buffer.ByteBuf[] byteBufArray32 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf33 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray32);
        bufferedChannel29.write(byteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(fileChannel20);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteBufArray32);
        org.junit.Assert.assertArrayEquals(byteBufArray32, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator0.heapBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel27.flushAndForceWrite(false);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray38 = new byte[][] { byteArray37 };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray38);
        int int41 = bufferedChannel27.read(byteBuf39, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        int int49 = bufferedChannel27.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (short) 1);
        int int51 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf53 = io.netty.buffer.Unpooled.copyInt((int) (short) -1);
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf53);
        int int56 = bufferedChannel14.read(byteBuf54, (long) (-1));
        long long57 = bufferedChannel14.size();
        long long58 = bufferedChannel14.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray37, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = io.netty.buffer.UnpooledByteBufAllocator.DEFAULT;
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer(10);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator6.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator6.ioBuffer(10);
        boolean boolean11 = unpooledByteBufAllocator6.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator6.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator6.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator14.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator14.compositeDirectBuffer();
        int int29 = unpooledByteBufAllocator14.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator30.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        int int46 = unpooledByteBufAllocator40.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator40.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator40.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel51 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel54 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel51, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel51, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel51, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel51, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel51, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel51, 64, 0L);
        long[] longArray71 = new long[] {};
        io.netty.buffer.ByteBuf byteBuf72 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf73 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf74 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf75 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf76 = io.netty.buffer.Unpooled.copyLong(longArray71);
        int int78 = bufferedChannel70.read(byteBuf76, 0L);
        bufferedChannel70.flushAndForceWrite(true);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(fileChannel51);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertArrayEquals(longArray71, new long[] {});
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(byteBuf73);
        org.junit.Assert.assertNotNull(byteBuf74);
        org.junit.Assert.assertNotNull(byteBuf75);
        org.junit.Assert.assertNotNull(byteBuf76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((-1), byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(byteBuf32);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray0);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer(0, 0);
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator0.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf25);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 1, 0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        long long36 = bufferedChannel9.forceWrite(true);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator37.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator37.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator37.directBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator37.heapBuffer(100);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = bufferedChannel9.read(byteBuf47, 0L);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Read past EOF");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf47);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.ioBuffer((int) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int10 = unpooledByteBufAllocator0.calculateNewCapacity(10, 32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator1.directBuffer(1);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator1.directBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator1.ioBuffer((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator1.buffer((int) (short) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str41 = unpooledByteBufAllocator40.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        int int46 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf42, 0L);
        bufferedChannel9.close();
        int int48 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long49 = bufferedChannel9.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator50 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator50.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator50.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator50.ioBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator50.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator50.compositeHeapBuffer();
        int int60 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf58, (long) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel9.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str41, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator50);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer((int) 'a');
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeHeapBuffer(32);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 100 (expected: not greater than maxCapacity(4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        io.netty.buffer.ByteBuf[] byteBufArray1 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray1);
        org.junit.Assert.assertNotNull(byteBufArray1);
        org.junit.Assert.assertArrayEquals(byteBufArray1, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(97, 32)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10, (int) (byte) 100);
        java.lang.String str17 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator0.directBuffer(1);
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator0.directBuffer(1, (int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str17, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf23);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(2L, (int) (byte) -1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) ' ');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator10.metric();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.heapBuffer((int) (short) 1);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator14.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric26 = unpooledByteBufAllocator14.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator27.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator41.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator41.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator41.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator50 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator51 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator51.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator51.ioBuffer();
        int int57 = unpooledByteBufAllocator51.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator51.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator51.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator51.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel62 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator51, fileChannel62, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator50, fileChannel62, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel73 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel62, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel62, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel62, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel62, 100, (long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel62, (int) (byte) -1, 10, (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator51);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(fileChannel62);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer((int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer(0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf59 = unpooledByteBufAllocator0.directBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 32, 64, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        long long13 = bufferedChannel9.size();
        int int14 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (short) 0, (int) '4', false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = unpooledByteBufAllocator0.calculateNewCapacity(32, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 32 (expected: not greater than maxCapacity(4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer(10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 0 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator10.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator10.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel37, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel50 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, (int) (short) 0, 2L);
        bufferedChannel50.close();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel50.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer(0);
        boolean boolean6 = unpooledByteBufAllocator3.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (short) 1);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric18 = unpooledByteBufAllocator0.metric();
        java.lang.Class<?> wildcardClass19 = byteBufAllocatorMetric18.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.buffer((int) 'a', 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str41 = unpooledByteBufAllocator40.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        int int46 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf42, 0L);
        bufferedChannel9.close();
        bufferedChannel9.close();
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str41, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer((int) 'a');
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeHeapBuffer(32);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer((int) (byte) 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (short) 100, (int) (short) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(32, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.heapBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (short) -1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator3.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer((int) (short) 100);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) 'a', (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator6.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator6.ioBuffer(10);
        boolean boolean11 = unpooledByteBufAllocator6.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator6.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator6.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator14.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator14.compositeDirectBuffer();
        int int29 = unpooledByteBufAllocator14.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator30.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        int int46 = unpooledByteBufAllocator40.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator40.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator40.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel51 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel54 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel51, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel51, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel51, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel51, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel51, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel51, 64, 0L);
        io.netty.buffer.ByteBuf byteBuf73 = unpooledByteBufAllocator3.heapBuffer((int) (byte) 1, 52);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(fileChannel51);
        org.junit.Assert.assertNotNull(byteBuf73);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(64, (int) 'a');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(0, 35)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator23 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator23.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator23.ioBuffer();
        int int29 = unpooledByteBufAllocator23.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator23.buffer(100);
        bufferedChannel22.write(byteBuf31);
        long long33 = bufferedChannel22.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator23);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator25.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator39.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator39.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator39.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator39.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator39.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator48 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator49.ioBuffer();
        int int55 = unpooledByteBufAllocator49.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator49.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator49.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator49.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel60 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel60, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator48, fileChannel60, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel60, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel60, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel60, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel60, 100, (int) (byte) 100, (long) ' ');
        io.netty.buffer.ByteBuf byteBuf81 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(fileChannel60);
        org.junit.Assert.assertNotNull(byteBuf81);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        boolean[] booleanArray6 = new boolean[] { false, false, false, false, true, false };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(booleanArray6);
        assertBooleanArrayEquals(booleanArray6, new boolean[] { false, false, false, false, true, false });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }
}

