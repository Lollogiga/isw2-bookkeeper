package org.apache.bookkeeper.generated.bc;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) 0, (byte) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        boolean boolean13 = unpooledByteBufAllocator0.isDirectBufferPooled();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((-1), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator9.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator9.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator9.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator19.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel24 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel24, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel24, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel24, 1, 1L);
        long long35 = bufferedChannel34.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(fileChannel24);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeDirectBuffer((int) (byte) 1);
        int int9 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator4.directBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator4.heapBuffer();
        java.lang.String str10 = unpooledByteBufAllocator4.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel25, (int) (byte) 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) (byte) 10, (long) 64);
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copyShort((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int43 = bufferedChannel38.read(byteBuf40, (long) 4, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(byteBuf40);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf9);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 197 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) 2L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.ioBuffer((int) (short) 1, (int) (short) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator13.compositeHeapBuffer((int) (short) 1);
        java.lang.String str16 = unpooledByteBufAllocator13.toString();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity((int) (short) 0, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator13.ioBuffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str23 = unpooledByteBufAllocator22.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator22.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator22.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric26 = unpooledByteBufAllocator22.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator31.ioBuffer();
        int int37 = unpooledByteBufAllocator31.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator31.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator31.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf41 = unpooledByteBufAllocator31.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel42 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel42, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel42, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel42, (int) (short) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel53 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel42, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel57 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel42, (int) (short) -1, 52, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str16, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str23, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf41);
        org.junit.Assert.assertNotNull(fileChannel42);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        java.lang.Class<?> wildcardClass40 = bufferedChannel9.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        bufferedChannel9.flushAndForceWrite(false);
        long long13 = bufferedChannel9.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str15 = unpooledByteBufAllocator14.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.heapBuffer();
        bufferedChannel9.write(byteBuf17);
        long long19 = bufferedChannel9.position();
        long long21 = bufferedChannel9.forceWrite(false);
        long long22 = bufferedChannel9.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str15, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric13 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.buffer((int) (byte) 10, (int) '#');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric17 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric17);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '#');
        boolean boolean10 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer(4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        boolean boolean5 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean6 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator7.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator20 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator20.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator20.ioBuffer(10);
        boolean boolean25 = unpooledByteBufAllocator20.isDirectBufferPooled();
        boolean boolean26 = unpooledByteBufAllocator20.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator20.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        int int34 = unpooledByteBufAllocator28.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator28.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator28.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator28.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric39 = unpooledByteBufAllocator28.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator28.compositeDirectBuffer();
        int int43 = unpooledByteBufAllocator28.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator44 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator44.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator44.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator44.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator44.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator44.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator54.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator54.ioBuffer();
        int int60 = unpooledByteBufAllocator54.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator54.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator54.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator54.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel65 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel65, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel65, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator44, fileChannel65, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel65, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator20, fileChannel65, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel84 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel65, 64, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel87 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel65, (int) (byte) 1, (long) 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel65, (int) (byte) 1);
        long long90 = bufferedChannel89.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric39);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator54);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(fileChannel65);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator1.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator1.heapBuffer(100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeDirectBuffer((int) ' ');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric14 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric14);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray2);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer();
        boolean boolean15 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.heapBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer(4);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        long long37 = bufferedChannel9.getFileChannelPosition();
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.copyFloat(0.0f);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = bufferedChannel9.read(byteBuf39, (long) 64, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=52)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteBuf39);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        java.lang.Class<?> wildcardClass12 = byteBufArray7.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long36 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.directBuffer();
        bufferedChannel9.write(byteBuf39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(byteBuf39);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator0.ioBuffer(52);
        java.lang.String str35 = unpooledByteBufAllocator0.toString();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str35, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer(10);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean11 = unpooledByteBufAllocator10.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel12 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel15 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel12, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel12, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator3.heapBuffer((int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileChannel12);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        long long36 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        int int38 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long39 = bufferedChannel9.position();
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator14.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel29 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel29, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel29, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel29, (int) (short) 0, (int) (short) 0, (long) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator41.buffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator41.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator55 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator55.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator55.ioBuffer();
        int int61 = unpooledByteBufAllocator55.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator55.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf63 = unpooledByteBufAllocator55.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf65 = unpooledByteBufAllocator55.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel66 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator55, fileChannel66, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel73 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel66, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel66, (int) ' ', 1L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel66, 1);
        bufferedChannel78.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel78.flushAndForceWriteIfRegularFlush(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(fileChannel29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator55);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf65);
        org.junit.Assert.assertNotNull(fileChannel66);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(1, (int) ' ');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(10, (int) (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) 100, 0);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(10, 32)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable(4);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((-1L), (int) (byte) 0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        long long16 = bufferedChannel14.forceWrite(true);
        io.netty.buffer.ByteBuf byteBuf18 = org.apache.bookkeeper.generated.Support.emptyWritable(0);
        bufferedChannel14.write(byteBuf18);
        java.lang.Class<?> wildcardClass20 = byteBuf18.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray21 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.copyMedium(intArray21);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray24 = new io.netty.buffer.ByteBuf[] { byteBuf22, byteBuf23 };
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray24);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray24);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf26);
        double[] doubleArray33 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.copyDouble(doubleArray33);
        int[] intArray38 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.copyInt(intArray38);
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copyShort(intArray38);
        io.netty.buffer.ByteBuf[] byteBufArray41 = new io.netty.buffer.ByteBuf[] { byteBuf16, byteBuf26, byteBuf34, byteBuf40 };
        io.netty.buffer.ByteBuf byteBuf42 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray41);
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray41);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = bufferedChannel14.read(byteBuf44, (long) (short) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=97)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertArrayEquals(intArray21, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBufArray24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertArrayEquals(intArray38, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBufArray41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator33 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str34 = unpooledByteBufAllocator33.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator33.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator33.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator41.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator41.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel52, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel52, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator33, fileChannel52, (int) (byte) 0, 32, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel52, 52, (long) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf68 = unpooledByteBufAllocator0.compositeBuffer(52);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 10 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str34, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(fileChannel52);
        org.junit.Assert.assertNotNull(compositeByteBuf68);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 100 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator3.compositeBuffer((int) ' ');
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        int int23 = bufferedChannel22.getNumOfBytesInWriteBuffer();
        bufferedChannel22.close();
        long long25 = bufferedChannel22.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 0);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator14.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator23 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        int int30 = unpooledByteBufAllocator24.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator24.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator24.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator24.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel35 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel35, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator23, fileChannel35, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel35, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel35, 64, (long) (short) -1);
        bufferedChannel49.clear();
        bufferedChannel49.flushAndForceWrite(false);
        long long53 = bufferedChannel49.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(fileChannel35);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator14.buffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator14.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        int int34 = unpooledByteBufAllocator28.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator28.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator28.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator28.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel39 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel39, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel39, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel39, (int) ' ', 1L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel53 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel39, (int) (byte) 10, 32, 1L);
        short[] shortArray57 = new short[] { (byte) 1, (byte) 100, (byte) 100 };
        io.netty.buffer.ByteBuf byteBuf58 = io.netty.buffer.Unpooled.copyShort(shortArray57);
        bufferedChannel53.write(byteBuf58);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(fileChannel39);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertArrayEquals(shortArray57, new short[] { (short) 1, (short) 100, (short) 100 });
        org.junit.Assert.assertNotNull(byteBuf58);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        int[] intArray6 = new int[] { (byte) 10, (-1), (short) -1, (short) 1, (-1), 0 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyShort(intArray6);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyShort(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 10, (-1), (-1), 1, (-1), 0 });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        io.netty.buffer.ByteBuf[] byteBufArray2 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(10, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray2);
        org.junit.Assert.assertArrayEquals(byteBufArray2, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) 100);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        int[] intArray4 = new int[] { 0, (byte) 100, ' ', ' ' };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, 100, 32, 32 });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator13.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator13.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator27.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator27.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator37.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel48 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel48, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel48, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel48, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel48, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel48, (int) (short) 10);
        long long65 = bufferedChannel64.position();
        int int66 = bufferedChannel64.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(fileChannel48);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.buffer(10, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.heapBuffer((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) 0, (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        boolean boolean5 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator9.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator22.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator22.ioBuffer(10);
        boolean boolean27 = unpooledByteBufAllocator22.isDirectBufferPooled();
        boolean boolean28 = unpooledByteBufAllocator22.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator22.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        int int36 = unpooledByteBufAllocator30.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator30.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator30.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator30.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric41 = unpooledByteBufAllocator30.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator30.compositeDirectBuffer();
        int int45 = unpooledByteBufAllocator30.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator46 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator46.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf49 = unpooledByteBufAllocator46.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator46.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator46.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator46.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator55 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator56 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator56.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf59 = unpooledByteBufAllocator56.ioBuffer();
        int int62 = unpooledByteBufAllocator56.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf63 = unpooledByteBufAllocator56.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator56.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf66 = unpooledByteBufAllocator56.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel67 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator56, fileChannel67, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator55, fileChannel67, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator46, fileChannel67, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel67, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel67, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel86 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel67, 64, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel67, (int) (byte) 1, (long) 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel93 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel67, (int) (byte) 100, 52, (long) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator22);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator46);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator56);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(compositeByteBuf66);
        org.junit.Assert.assertNotNull(fileChannel67);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(1, 32)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt((int) (short) -1);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) 100, 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: source index -1 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.buffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator12.compositeDirectBuffer();
        int int27 = unpooledByteBufAllocator12.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator28.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator28.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator28.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator38 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator38.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator38.ioBuffer();
        int int44 = unpooledByteBufAllocator38.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator38.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator38.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator38.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel49 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator38, fileChannel49, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel49, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel60 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel49, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel49, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel49, (int) 'a', (int) (short) 0, (long) '#');
        java.lang.Class<?> wildcardClass68 = bufferedChannel67.getClass();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator38);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(fileChannel49);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf11);
        double[] doubleArray18 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copyDouble(doubleArray18);
        int[] intArray23 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copyInt(intArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyShort(intArray23);
        io.netty.buffer.ByteBuf[] byteBufArray26 = new io.netty.buffer.ByteBuf[] { byteBuf1, byteBuf11, byteBuf19, byteBuf25 };
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertArrayEquals(intArray23, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator5.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        int int15 = unpooledByteBufAllocator9.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator9.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator9.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel20 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel20, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel20, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel20, (int) (short) 1);
        bufferedChannel29.close();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel29.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(fileChannel20);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyInt(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 10, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, false, true);
        java.lang.String str4 = unpooledByteBufAllocator3.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator3.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.buffer((int) (short) 1, (int) 'a');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str4, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray35 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf37);
        int int41 = bufferedChannel9.read(byteBuf37, (long) 0, (int) (byte) 0);
        long long42 = bufferedChannel9.size();
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray35);
        org.junit.Assert.assertArrayEquals(byteBufferArray35, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator0.compositeHeapBuffer(10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.directBuffer((int) '4', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 52 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric6 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator7.directBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator7.heapBuffer();
        java.lang.String str13 = unpooledByteBufAllocator7.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator17.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator17.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator17.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel28 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel28, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel28, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel28, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator7.ioBuffer(52);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str43 = unpooledByteBufAllocator42.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator42.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator42.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf49 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator42.buffer((int) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator52 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator52.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator52.ioBuffer();
        int int58 = unpooledByteBufAllocator52.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator52.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator52.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator52.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator52.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator67 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator68.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator68.ioBuffer();
        int int74 = unpooledByteBufAllocator68.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf75 = unpooledByteBufAllocator68.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf76 = unpooledByteBufAllocator68.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf78 = unpooledByteBufAllocator68.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel79 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel79, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel86 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator67, fileChannel79, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator52, fileChannel79, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel92 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator42, fileChannel79, (int) (short) 0, 2L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel95 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel79, (int) (short) 1, (long) (byte) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel98 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel79, (int) (short) 0, (long) (short) 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str13, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(fileChannel28);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str43, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator52);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator68);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf75);
        org.junit.Assert.assertNotNull(compositeByteBuf76);
        org.junit.Assert.assertNotNull(compositeByteBuf78);
        org.junit.Assert.assertNotNull(fileChannel79);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10, (int) (short) 10);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator7.buffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator7.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator7.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator7.heapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator19.ioBuffer();
        int int25 = unpooledByteBufAllocator19.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator19.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator19.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator19.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric30 = unpooledByteBufAllocator19.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric31 = unpooledByteBufAllocator19.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator32 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator32.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator32.ioBuffer();
        int int38 = unpooledByteBufAllocator32.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator32.buffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator32.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator32.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator32.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator32.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator32.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator46 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator46.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf49 = unpooledByteBufAllocator46.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator46.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator46.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator46.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator55 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator56 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator56.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf59 = unpooledByteBufAllocator56.ioBuffer();
        int int62 = unpooledByteBufAllocator56.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf63 = unpooledByteBufAllocator56.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator56.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf66 = unpooledByteBufAllocator56.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel67 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator56, fileChannel67, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator55, fileChannel67, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator46, fileChannel67, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator32, fileChannel67, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel67, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel87 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel67, 100, (int) (byte) 100, (long) ' ');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel91 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel67, 32, 52, (long) 4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric30);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric31);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator46);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator56);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(compositeByteBuf66);
        org.junit.Assert.assertNotNull(fileChannel67);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        byte[] byteArray4 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray4);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator7.heapBuffer((int) (byte) 1, (int) ' ');
        java.nio.ByteBuffer[] byteBufferArray20 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray20);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray20);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf22);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf22);
        int[] intArray30 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copyMedium(intArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray33 = new io.netty.buffer.ByteBuf[] { byteBuf31, byteBuf32 };
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        int[] intArray44 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.copyMedium(intArray44);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray47 = new io.netty.buffer.ByteBuf[] { byteBuf45, byteBuf46 };
        io.netty.buffer.ByteBuf byteBuf48 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray47);
        io.netty.buffer.ByteBuf byteBuf49 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray47);
        io.netty.buffer.ByteBuf byteBuf50 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray47);
        java.nio.ByteBuffer[] byteBufferArray53 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray53);
        io.netty.buffer.ByteBuf byteBuf55 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 1, byteBufferArray53);
        io.netty.buffer.ByteBuf byteBuf56 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray53);
        io.netty.buffer.ByteBuf[] byteBufArray57 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf17, byteBuf22, byteBuf39, byteBuf50, byteBuf56 };
        io.netty.buffer.ByteBuf byteBuf58 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray57);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf59 = io.netty.buffer.Unpooled.wrappedBuffer((-1), byteBufArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertArrayEquals(byteArray4, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBufferArray20);
        org.junit.Assert.assertArrayEquals(byteBufferArray20, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertArrayEquals(intArray30, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBufArray33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertArrayEquals(intArray44, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBufArray47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(byteBufferArray53);
        org.junit.Assert.assertArrayEquals(byteBufferArray53, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBufArray57);
        org.junit.Assert.assertNotNull(byteBuf58);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str14 = unpooledByteBufAllocator13.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator17.heapBuffer();
        java.lang.String str23 = unpooledByteBufAllocator17.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel38, (int) (byte) 10, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, 64, (int) (byte) 1, (long) 32);
        io.netty.buffer.ByteBuf byteBuf57 = io.netty.buffer.Unpooled.copyFloat((float) (-1));
        bufferedChannel55.write(byteBuf57);
        int int59 = bufferedChannel55.getNumOfBytesInWriteBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator60 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator60.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator60.ioBuffer();
        int int66 = unpooledByteBufAllocator60.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf67 = unpooledByteBufAllocator60.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator60.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator60.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf72 = unpooledByteBufAllocator60.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf74 = unpooledByteBufAllocator60.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf75 = unpooledByteBufAllocator60.compositeHeapBuffer();
        int int77 = bufferedChannel55.read((io.netty.buffer.ByteBuf) compositeByteBuf75, (long) (byte) -1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str14, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str23, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator60);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf67);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(compositeByteBuf74);
        org.junit.Assert.assertNotNull(compositeByteBuf75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer(52);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1, (int) '4');
        java.lang.String str7 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str7, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf8);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        int[] intArray23 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copyMedium(intArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray26 = new io.netty.buffer.ByteBuf[] { byteBuf24, byteBuf25 };
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf27);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = bufferedChannel14.read(byteBuf28, (long) (short) 100, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=64)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertArrayEquals(intArray23, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric8 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.ioBuffer(10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator12.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric19 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator20 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator20.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator20.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator20.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator20.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator20.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator20.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator30.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel35 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel35, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator20, fileChannel35, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel35, (int) (short) 100, (long) (short) 100);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel35, 100);
        bufferedChannel47.flushAndForceWrite(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric19);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(fileChannel35);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat(1.0f);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeBuffer((int) 'a');
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator3.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator3.compositeHeapBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        boolean boolean5 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator0.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 1, (byte) 1 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray6, 52, 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray6, 64, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertArrayEquals(byteArray6, new byte[] { (byte) 100, (byte) -1, (byte) 10, (byte) 100, (byte) 1, (byte) 1 });
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer(0, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer(0, (int) (short) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        java.nio.ByteBuffer[] byteBufferArray5 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray5);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray5);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 10, byteBufferArray5);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray5);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufferArray5);
        org.junit.Assert.assertNotNull(byteBufferArray5);
        org.junit.Assert.assertArrayEquals(byteBufferArray5, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(32, byteArray11);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer(0, byteArray11);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        long long23 = bufferedChannel22.size();
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyMedium((int) (byte) 100);
        int int28 = bufferedChannel22.read(byteBuf25, (long) (byte) 1, (int) (byte) 0);
        long long30 = bufferedChannel22.forceWrite(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) 1, (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric2 = unpooledByteBufAllocator1.metric();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator1.heapBuffer((int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric2);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        int[] intArray7 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray10 = new io.netty.buffer.ByteBuf[] { byteBuf8, byteBuf9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteBufArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertArrayEquals(intArray7, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.directBuffer(1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        bufferedChannel9.flushAndForceWrite(false);
        long long13 = bufferedChannel9.getFileChannelPosition();
        bufferedChannel9.close();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        int[] intArray22 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copyMedium(intArray22);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray25 = new io.netty.buffer.ByteBuf[] { byteBuf23, byteBuf24 };
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray25);
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel9.write(byteBuf29);
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertArrayEquals(intArray22, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBufArray25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray0);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator0.buffer(64);
        io.netty.buffer.ByteBuf byteBuf60 = unpooledByteBufAllocator0.directBuffer((int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(byteBuf60);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (-1), (int) (short) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 10);
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeDirectBuffer(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf1 = io.netty.buffer.Unpooled.compositeBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long33 = bufferedChannel9.size();
        bufferedChannel9.close();
        java.nio.ByteBuffer[] byteBufferArray37 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray37);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray37);
        int int41 = bufferedChannel9.read(byteBuf39, (long) ' ');
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        // The following exception was thrown during execution in test generation
        try {
            long long45 = bufferedChannel9.forceWrite(true);
            org.junit.Assert.fail("Expected exception of type java.nio.channels.ClosedChannelException; message: null");
        } catch (java.nio.channels.ClosedChannelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray37);
        org.junit.Assert.assertArrayEquals(byteBufferArray37, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long20 = bufferedChannel14.getFileChannelPosition();
        long long21 = bufferedChannel14.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.close();
        bufferedChannel9.clear();
        bufferedChannel9.clear();
        // The following exception was thrown during execution in test generation
        try {
            long long39 = bufferedChannel9.size();
            org.junit.Assert.fail("Expected exception of type org.apache.bookkeeper.bookie.BufferedChannelBase.BufferedChannelClosedException; message: Attempting to access a file channel that has already been closed");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (short) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(1, 100)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray10 = new byte[][] { byteArray9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteArray10);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.heapBuffer();
        boolean boolean8 = unpooledByteBufAllocator3.isDirectBufferPooled();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric9 = unpooledByteBufAllocator3.metric();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric9);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        int int9 = bufferedChannel8.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator6.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator6.ioBuffer(10);
        boolean boolean11 = unpooledByteBufAllocator6.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator6.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator6.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator14.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator14.compositeDirectBuffer();
        int int29 = unpooledByteBufAllocator14.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator30.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        int int46 = unpooledByteBufAllocator40.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator40.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator40.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel51 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel54 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel51, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel51, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel51, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel51, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel51, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel70 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel51, 64, 0L);
        long[] longArray71 = new long[] {};
        io.netty.buffer.ByteBuf byteBuf72 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf73 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf74 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf75 = io.netty.buffer.Unpooled.copyLong(longArray71);
        io.netty.buffer.ByteBuf byteBuf76 = io.netty.buffer.Unpooled.copyLong(longArray71);
        int int78 = bufferedChannel70.read(byteBuf76, 0L);
        long long79 = bufferedChannel70.position();
        bufferedChannel70.flush();
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(fileChannel51);
        org.junit.Assert.assertNotNull(longArray71);
        org.junit.Assert.assertArrayEquals(longArray71, new long[] {});
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(byteBuf73);
        org.junit.Assert.assertNotNull(byteBuf74);
        org.junit.Assert.assertNotNull(byteBuf75);
        org.junit.Assert.assertNotNull(byteBuf76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray8 = new byte[][] { byteArray7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray8);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertArrayEquals(byteArray7, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray9 = new byte[][] { byteArray8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray8, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer(64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '#');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric10 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric10);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(1L, (int) (byte) 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.buffer((int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(100L, (int) (short) 1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        java.lang.Class<?> wildcardClass57 = bufferedChannel56.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer((int) ' ');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int22 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minNewCapacity: 0 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.buffer(10, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.heapBuffer((int) (short) 10);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric10 = unpooledByteBufAllocator3.metric();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator3.directBuffer(100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(52)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric10);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.buffer();
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((int) (short) 100);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) 1, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) '#');
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        bufferedChannel51.close();
        bufferedChannel51.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(0, (int) (short) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator14.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator23 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        int int30 = unpooledByteBufAllocator24.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator24.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator24.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator24.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel35 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel35, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator23, fileChannel35, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel35, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel35, 64, (long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator0.ioBuffer(32, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(fileChannel35);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(true);
        int[] intArray39 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copyMedium(intArray39);
        io.netty.buffer.ByteBuf byteBuf41 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray42 = new io.netty.buffer.ByteBuf[] { byteBuf40, byteBuf41 };
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray42);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf44);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf45);
        bufferedChannel9.write(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertArrayEquals(intArray39, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBufArray42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        long long24 = bufferedChannel22.forceWrite(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 0, (int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (short) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 0, (int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel14 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel14, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator2, fileChannel14, 100, (int) (short) 0, (long) (-1));
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator2.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator2.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(fileChannel14);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf11);
        double[] doubleArray18 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copyDouble(doubleArray18);
        int[] intArray23 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.copyInt(intArray23);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyShort(intArray23);
        io.netty.buffer.ByteBuf[] byteBufArray26 = new io.netty.buffer.ByteBuf[] { byteBuf1, byteBuf11, byteBuf19, byteBuf25 };
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray26);
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray26);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray26);
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0, decrement: 1");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertArrayEquals(intArray23, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBufArray26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 97 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt(4);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        java.nio.ByteBuffer[] byteBufferArray6 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray6);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray6);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteBufferArray6);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 10, byteBufferArray6);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(4, byteBufferArray6);
        org.junit.Assert.assertNotNull(byteBufferArray6);
        org.junit.Assert.assertArrayEquals(byteBufferArray6, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyInt(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copyShort((int) '4');
        int int40 = bufferedChannel9.read(byteBuf38, 0L);
        long long41 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator42.ioBuffer(1, (int) (short) 100);
        java.lang.String str51 = unpooledByteBufAllocator42.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator42.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator56 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean57 = unpooledByteBufAllocator56.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel58 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator56, fileChannel58, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator42, fileChannel58, (int) (byte) 0, (long) (byte) -1);
        boolean boolean65 = unpooledByteBufAllocator42.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator42.heapBuffer(1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator42.compositeDirectBuffer((int) (short) 100);
        int int71 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf69, (long) 10);
        io.netty.buffer.ByteBuf byteBuf72 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf69);
        io.netty.buffer.ByteBuf byteBuf73 = io.netty.buffer.Unpooled.copiedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf69);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str51, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fileChannel58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(byteBuf73);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator6.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator6.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel15, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel38, (int) (short) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel38, 1, 1, (long) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator1.ioBuffer(10, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator1.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        io.netty.buffer.CompositeByteBuf compositeByteBuf1 = io.netty.buffer.Unpooled.compositeBuffer(100);
        org.junit.Assert.assertNotNull(compositeByteBuf1);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator13.ioBuffer(10);
        boolean boolean18 = unpooledByteBufAllocator13.isDirectBufferPooled();
        boolean boolean19 = unpooledByteBufAllocator13.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator21.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator21.ioBuffer();
        int int27 = unpooledByteBufAllocator21.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator21.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator21.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator21.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric32 = unpooledByteBufAllocator21.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator21.compositeDirectBuffer();
        int int36 = unpooledByteBufAllocator21.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator37.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator37.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator46 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator47 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf49 = unpooledByteBufAllocator47.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator47.ioBuffer();
        int int53 = unpooledByteBufAllocator47.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator47.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator47.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator47.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel58 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator47, fileChannel58, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator46, fileChannel58, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel58, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel58, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel58, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel58, (int) '4', 100L);
        bufferedChannel77.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator47);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(fileChannel58);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        bufferedChannel35.flushAndForceWrite(true);
        byte[] byteArray43 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray43);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray43);
        io.netty.buffer.ByteBuf byteBuf48 = io.netty.buffer.Unpooled.copiedBuffer(byteArray43, (int) (byte) 10, 0);
        io.netty.buffer.ByteBuf byteBuf49 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray43);
        io.netty.buffer.ByteBuf byteBuf50 = io.netty.buffer.Unpooled.copiedBuffer(byteArray43);
        int int53 = bufferedChannel35.read(byteBuf50, (long) ' ', (int) (byte) -1);
        java.lang.Class<?> wildcardClass54 = byteBuf50.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertArrayEquals(byteArray43, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer(10);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.directBuffer((int) '4', 52);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf17);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        long long36 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        bufferedChannel9.close();
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copyDouble(100.0d);
        int int42 = bufferedChannel9.read(byteBuf40, (-1L));
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf11);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) ' ', (int) '#');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        int int23 = bufferedChannel22.getNumOfBytesInWriteBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        int int30 = unpooledByteBufAllocator24.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator24.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator24.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator24.compositeBuffer(100);
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator24.directBuffer();
        bufferedChannel22.write(byteBuf35);
        bufferedChannel22.close();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel22.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        boolean boolean23 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        int int35 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.close();
        long long37 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(1, 35)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        int int10 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        int int11 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        short[] shortArray12 = new short[] {};
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copyShort(shortArray12);
        int int15 = bufferedChannel9.read(byteBuf13, 10L);
        int int16 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(shortArray12);
        org.junit.Assert.assertArrayEquals(shortArray12, new short[] {});
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        int int34 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        float[] floatArray39 = new float[] { 0L, (byte) 10, 0.0f, 10.0f };
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copyFloat(floatArray39);
        int int42 = bufferedChannel9.read(byteBuf40, 0L);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(floatArray39);
        org.junit.Assert.assertArrayEquals(floatArray39, new float[] { 0.0f, 10.0f, 0.0f, 10.0f }, (float) 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long20 = bufferedChannel14.getFileChannelPosition();
        int int21 = bufferedChannel14.getNumOfBytesInWriteBuffer();
        long long22 = bufferedChannel14.getFileChannelPosition();
        int[] intArray30 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copyMedium(intArray30);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray33 = new io.netty.buffer.ByteBuf[] { byteBuf31, byteBuf32 };
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 10, byteBufArray33);
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = bufferedChannel14.read(byteBuf40, (long) ' ', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertArrayEquals(intArray30, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBufArray33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        int int23 = bufferedChannel22.getNumOfBytesInWriteBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        int int30 = unpooledByteBufAllocator24.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator24.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator24.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator24.compositeBuffer(100);
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator24.directBuffer();
        bufferedChannel22.write(byteBuf35);
        bufferedChannel22.flushAndForceWrite(false);
        bufferedChannel22.clear();
        bufferedChannel22.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer((int) (short) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.heapBuffer((int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.wrappedBuffer((-1), byteArray11);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        io.netty.buffer.ByteBuf[] byteBufArray1 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(64, byteBufArray1);
        org.junit.Assert.assertNotNull(byteBufArray1);
        org.junit.Assert.assertArrayEquals(byteBufArray1, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        boolean boolean5 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.directBuffer((int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator1.directBuffer(1);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator1.ioBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.directBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator1.metric();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator1.heapBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator1.directBuffer(0);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        long long37 = bufferedChannel9.getFileChannelPosition();
        int int38 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        int int39 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf4);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator0.compositeDirectBuffer(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long14 = bufferedChannel9.position();
        long long16 = bufferedChannel9.forceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric6 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer((int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 1 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric6);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel38, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, (int) '#', 100, (long) 64);
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator0.compositeHeapBuffer(32);
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator0.directBuffer((int) (short) 0, (int) '#');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator64 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf66 = unpooledByteBufAllocator64.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator64.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator68.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf72 = unpooledByteBufAllocator68.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel73 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel73, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator64, fileChannel73, (int) (byte) 0, (int) '#', (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel84 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel73, 10, (long) (short) 10);
        bufferedChannel84.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf66);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator68);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(fileChannel73);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (short) 10, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(10, 52)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long21 = bufferedChannel14.forceWrite(true);
        long long22 = bufferedChannel14.getFileChannelPosition();
        bufferedChannel14.flushAndForceWrite(false);
        long long25 = bufferedChannel14.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        io.netty.buffer.ByteBuf byteBuf1 = org.apache.bookkeeper.generated.Support.emptyWritable(1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (short) 10, (int) (short) 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 10, 100, (long) 1);
        bufferedChannel32.clear();
        bufferedChannel32.flushAndForceWrite(false);
        bufferedChannel32.flushAndForceWriteIfRegularFlush(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        java.nio.ByteBuffer[] byteBufferArray1 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray1);
        org.junit.Assert.assertNotNull(byteBufferArray1);
        org.junit.Assert.assertArrayEquals(byteBufferArray1, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 10);
        int[] intArray7 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray10 = new io.netty.buffer.ByteBuf[] { byteBuf8, byteBuf9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf12);
        double[] doubleArray19 = new double[] { (short) -1, (short) -1, (short) -1, (byte) 10, 0.0f };
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copyDouble(doubleArray19);
        int[] intArray24 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyInt(intArray24);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.copyShort(intArray24);
        io.netty.buffer.ByteBuf[] byteBufArray27 = new io.netty.buffer.ByteBuf[] { byteBuf2, byteBuf12, byteBuf20, byteBuf26 };
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray27);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray27);
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray27);
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufArray27);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertArrayEquals(intArray7, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] { (-1.0d), (-1.0d), (-1.0d), 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertArrayEquals(intArray24, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBufArray27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator25.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel36 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel36, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel36, (int) (byte) 100, (long) 32);
        int int45 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 10, (int) (byte) 100);
        boolean boolean46 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(fileChannel36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator1.directBuffer(1);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator1.ioBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator1.directBuffer((int) 'a', (int) (short) 100);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel27.flushAndForceWrite(false);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray38 = new byte[][] { byteArray37 };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray38);
        int int41 = bufferedChannel27.read(byteBuf39, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        int int49 = bufferedChannel27.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (short) 1);
        int int51 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (byte) 10);
        byte[] byteArray59 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray60 = new byte[][] { byteArray59 };
        io.netty.buffer.ByteBuf byteBuf61 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray60);
        io.netty.buffer.ByteBuf byteBuf62 = io.netty.buffer.Unpooled.copiedBuffer(byteArray60);
        io.netty.buffer.ByteBuf byteBuf63 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray60);
        io.netty.buffer.ByteBuf byteBuf64 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf63);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = bufferedChannel14.read(byteBuf64, (long) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray37, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertArrayEquals(byteArray59, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertNotNull(byteBuf61);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(byteBuf64);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        long long36 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        // The following exception was thrown during execution in test generation
        try {
            long long43 = bufferedChannel9.forceWrite(false);
            org.junit.Assert.fail("Expected exception of type java.nio.channels.ClosedChannelException; message: null");
        } catch (java.nio.channels.ClosedChannelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) '#');
        java.lang.String str15 = unpooledByteBufAllocator0.toString();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.directBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str15, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(64, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 64 (expected: not greater than maxCapacity(4)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(52, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        io.netty.buffer.ByteBuf[] byteBufArray1 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        org.junit.Assert.assertNotNull(byteBufArray1);
        org.junit.Assert.assertArrayEquals(byteBufArray1, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        bufferedChannel35.flushAndForceWrite(true);
        long long38 = bufferedChannel35.size();
        long long39 = bufferedChannel35.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator5.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        int int15 = unpooledByteBufAllocator9.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator9.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator9.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel20 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel20, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel20, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel20, (int) (short) 1);
        java.lang.Class<?> wildcardClass30 = bufferedChannel29.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(fileChannel20);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(100L, (int) (byte) 100, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        int[] intArray7 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray10 = new io.netty.buffer.ByteBuf[] { byteBuf8, byteBuf9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 10, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray10);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertArrayEquals(intArray7, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.directBuffer((int) '#', (int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        long long16 = bufferedChannel14.forceWrite(true);
        long long17 = bufferedChannel14.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator8 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator8.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator8.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator8.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator8.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator8.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator8.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel30 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator8, fileChannel23, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel23, (int) (short) 100, (long) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        java.lang.String str7 = unpooledByteBufAllocator3.toString();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer();
        int int11 = unpooledByteBufAllocator3.calculateNewCapacity((int) (byte) 0, 52);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator3.compositeBuffer();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str7, "UnpooledByteBufAllocator(directByDefault: false)");
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) ' ', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf6 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(compositeByteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        java.nio.ByteOrder byteOrder0 = io.netty.buffer.Unpooled.BIG_ENDIAN;
        java.lang.Class<?> wildcardClass1 = byteOrder0.getClass();
        org.junit.Assert.assertNotNull(byteOrder0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        boolean boolean12 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel14 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel14, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator2, fileChannel14, 100, (int) (short) 0, (long) (-1));
        int int22 = bufferedChannel21.getNumOfBytesInWriteBuffer();
        long long23 = bufferedChannel21.size();
        long long24 = bufferedChannel21.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(fileChannel14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        float[] floatArray6 = new float[] { 0.0f, 1L, 10, (byte) 10, 0, 100 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyFloat(floatArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyFloat(floatArray6);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyFloat(floatArray6);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyFloat(floatArray6);
        org.junit.Assert.assertNotNull(floatArray6);
        org.junit.Assert.assertArrayEquals(floatArray6, new float[] { 0.0f, 1.0f, 10.0f, 10.0f, 0.0f, 100.0f }, (float) 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (short) 10, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 62 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flush();
        long long16 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        long long37 = bufferedChannel9.getFileChannelPosition();
        long long39 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (short) 100, (int) (byte) 0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        java.lang.String str10 = unpooledByteBufAllocator0.toString();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.buffer(52);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        bufferedChannel22.clear();
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.directBuffer((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int27 = bufferedChannel22.read(byteBuf25, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minWritableBytes : -32 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(byteBuf25);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) (short) 0, (int) '#', true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str41 = unpooledByteBufAllocator40.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        int int46 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf42, 0L);
        bufferedChannel9.close();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator48 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator48.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator48.ioBuffer();
        int int54 = unpooledByteBufAllocator48.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator48.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator48.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf59 = unpooledByteBufAllocator48.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator48.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator63 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator64 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf66 = unpooledByteBufAllocator64.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator64.ioBuffer();
        int int70 = unpooledByteBufAllocator64.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf71 = unpooledByteBufAllocator64.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf72 = unpooledByteBufAllocator64.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf74 = unpooledByteBufAllocator64.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel75 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator64, fileChannel75, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator63, fileChannel75, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator48, fileChannel75, (int) (byte) 1, 0L);
        io.netty.buffer.ByteBuf byteBuf87 = unpooledByteBufAllocator48.ioBuffer((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int90 = bufferedChannel9.read(byteBuf87, (long) 52, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minWritableBytes : -52 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str41, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator48);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator64);
        org.junit.Assert.assertNotNull(byteBuf66);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf71);
        org.junit.Assert.assertNotNull(compositeByteBuf72);
        org.junit.Assert.assertNotNull(compositeByteBuf74);
        org.junit.Assert.assertNotNull(fileChannel75);
        org.junit.Assert.assertNotNull(byteBuf87);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, true);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric15 = unpooledByteBufAllocator4.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric16 = unpooledByteBufAllocator4.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator17.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator17.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator17.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator17.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator31.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator31.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator31.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator31.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator41.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator41.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel52, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel52, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel52, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel52, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel52, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel52, (int) (byte) -1, (int) (byte) 0, (long) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric15);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(fileChannel52);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator0.heapBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        int int22 = unpooledByteBufAllocator16.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator16.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator16.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator16.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel27 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel30 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel27, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel34 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel27, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel27, (int) (byte) 1, 0L);
        bufferedChannel37.flushAndForceWriteIfRegularFlush(false);
        long long40 = bufferedChannel37.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(fileChannel27);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        java.lang.String str10 = unpooledByteBufAllocator0.toString();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator13.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator13.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator26.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator40.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator40.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator40.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator50 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator50.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator50.ioBuffer();
        int int56 = unpooledByteBufAllocator50.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator50.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator50.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator50.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel61 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator50, fileChannel61, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel61, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel61, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel61, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel61, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel61, 52, (long) 'a');
        long long81 = bufferedChannel80.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator50);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(fileChannel61);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        int int23 = bufferedChannel22.getNumOfBytesInWriteBuffer();
        bufferedChannel22.close();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator25.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator25.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator25.buffer();
        boolean boolean32 = unpooledByteBufAllocator25.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf33);
        bufferedChannel22.write(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) '4', (int) (short) 0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator10.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel19 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel19, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel19, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator31.ioBuffer();
        int int37 = unpooledByteBufAllocator31.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator31.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator31.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf41 = unpooledByteBufAllocator31.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel42 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel42, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel42, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel42, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator52 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator52.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator52.ioBuffer();
        int int58 = unpooledByteBufAllocator52.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator52.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator52.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator52.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator52.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator67 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf70 = unpooledByteBufAllocator68.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator68.ioBuffer();
        int int74 = unpooledByteBufAllocator68.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf75 = unpooledByteBufAllocator68.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf76 = unpooledByteBufAllocator68.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf78 = unpooledByteBufAllocator68.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel79 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel79, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel86 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator67, fileChannel79, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator52, fileChannel79, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel92 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel79, (int) '4', (long) (short) 100);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel95 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel79, (int) '#', (long) 100);
        io.netty.buffer.ByteBuf byteBuf97 = unpooledByteBufAllocator3.buffer((int) '4');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(fileChannel19);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf41);
        org.junit.Assert.assertNotNull(fileChannel42);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator52);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator68);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf75);
        org.junit.Assert.assertNotNull(compositeByteBuf76);
        org.junit.Assert.assertNotNull(compositeByteBuf78);
        org.junit.Assert.assertNotNull(fileChannel79);
        org.junit.Assert.assertNotNull(byteBuf97);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long20 = bufferedChannel14.getFileChannelPosition();
        bufferedChannel14.flush();
        bufferedChannel14.flushAndForceWrite(true);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator27.directBuffer();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator27.buffer((int) (short) 10, (int) (short) 100);
        bufferedChannel14.write(byteBuf31);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf31);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.directBuffer((int) 'a');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        bufferedChannel35.flushAndForceWrite(true);
        int int38 = bufferedChannel35.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str14 = unpooledByteBufAllocator13.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator17.directBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator17.heapBuffer();
        java.lang.String str23 = unpooledByteBufAllocator17.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel38, (int) (byte) 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel38, (int) (byte) 10, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel38, 64, (int) (byte) 1, (long) 32);
        io.netty.buffer.ByteBuf byteBuf57 = io.netty.buffer.Unpooled.copyFloat((float) (-1));
        bufferedChannel55.write(byteBuf57);
        io.netty.buffer.ByteBuf byteBuf59 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf57);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str14, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str23, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf59);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeHeapBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.directBuffer(1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray9 = new byte[][] { byteArray8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray8, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.heapBuffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator1.compositeBuffer(64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator1.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        double[] doubleArray36 = new double[] { 1.0d, 'a', '#' };
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.copyDouble(doubleArray36);
        int int39 = bufferedChannel9.read(byteBuf37, (long) ' ');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.directBuffer(1);
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator41.ioBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator41.ioBuffer();
        bufferedChannel9.write(byteBuf46);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertArrayEquals(doubleArray36, new double[] { 1.0d, 97.0d, 35.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(true, true, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator7 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator7.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator7.ioBuffer();
        int int13 = unpooledByteBufAllocator7.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator7.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator7.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator7.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel18 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator7, fileChannel18, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel25 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel18, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel18, (int) (byte) 100, (int) (short) 10, 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator3.compositeHeapBuffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator3.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator3.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(fileChannel18);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((-1), byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(4, byteArray11);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.ioBuffer((int) (short) 1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.directBuffer((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        java.lang.String str4 = unpooledByteBufAllocator1.toString();
        int int7 = unpooledByteBufAllocator1.calculateNewCapacity((int) (short) 0, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator1.ioBuffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str11 = unpooledByteBufAllocator10.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric14 = unpooledByteBufAllocator10.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator15.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator15.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator19.ioBuffer();
        int int25 = unpooledByteBufAllocator19.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator19.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator19.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator19.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel30 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel30, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel30, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel30, (int) (short) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel30, (int) (byte) 1);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric42 = unpooledByteBufAllocator1.metric();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str4, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str11, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(fileChannel30);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric42);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        int int36 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        float[] floatArray41 = new float[] { 0L, (byte) 10, 0.0f, 10.0f };
        io.netty.buffer.ByteBuf byteBuf42 = io.netty.buffer.Unpooled.copyFloat(floatArray41);
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.copyFloat(floatArray41);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.copyFloat(floatArray41);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.copyFloat(floatArray41);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.copyFloat(floatArray41);
        bufferedChannel9.write(byteBuf46);
        long long48 = bufferedChannel9.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertArrayEquals(floatArray41, new float[] { 0.0f, 10.0f, 0.0f, 10.0f }, (float) 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 16L + "'", long48 == 16L);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer((int) (short) 1, (int) (byte) 1);
        int int18 = unpooledByteBufAllocator0.calculateNewCapacity((int) '#', (int) '4');
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator0.buffer((int) ' ', 64);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(byteBuf21);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.heapBuffer((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(35)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) 'a', (long) (-1));
        int int23 = bufferedChannel22.getNumOfBytesInWriteBuffer();
        bufferedChannel22.close();
        long long25 = bufferedChannel22.getFileChannelPosition();
        bufferedChannel22.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        int int36 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long37 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(1, 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel27.flushAndForceWrite(false);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray38 = new byte[][] { byteArray37 };
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray38);
        int int41 = bufferedChannel27.read(byteBuf39, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        int int49 = bufferedChannel27.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (short) 1);
        int int51 = bufferedChannel14.read((io.netty.buffer.ByteBuf) compositeByteBuf47, (long) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf53 = io.netty.buffer.Unpooled.copyInt((int) (short) -1);
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf53);
        int int56 = bufferedChannel14.read(byteBuf54, (long) (-1));
        bufferedChannel14.clear();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator58 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str59 = unpooledByteBufAllocator58.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator58.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator58.directBuffer(64);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = bufferedChannel14.read(byteBuf62, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: minWritableBytes : -100 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray37, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str59, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(byteBuf62);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray35 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf37);
        int int41 = bufferedChannel9.read(byteBuf37, (long) 0, (int) (byte) 0);
        bufferedChannel9.clear();
        bufferedChannel9.flushAndForceWrite(false);
        long long45 = bufferedChannel9.getFileChannelPosition();
        long long47 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray35);
        org.junit.Assert.assertArrayEquals(byteBufferArray35, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        java.lang.String str7 = unpooledByteBufAllocator3.toString();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer();
        int int11 = unpooledByteBufAllocator3.calculateNewCapacity((int) (byte) 0, 52);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator3.directBuffer();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str7, "UnpooledByteBufAllocator(directByDefault: false)");
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyShort(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copyShort((int) '4');
        int int40 = bufferedChannel9.read(byteBuf38, 0L);
        long long41 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator42.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator42.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator42.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator42.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator42.ioBuffer(1, (int) (short) 100);
        java.lang.String str51 = unpooledByteBufAllocator42.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator42.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator56 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean57 = unpooledByteBufAllocator56.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel58 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator56, fileChannel58, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator42, fileChannel58, (int) (byte) 0, (long) (byte) -1);
        boolean boolean65 = unpooledByteBufAllocator42.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator42.heapBuffer(1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator42.compositeDirectBuffer((int) (short) 100);
        int int71 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf69, (long) 10);
        io.netty.buffer.ByteBuf byteBuf72 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf69);
        java.lang.Class<?> wildcardClass73 = compositeByteBuf69.getClass();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str51, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fileChannel58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer(10);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean11 = unpooledByteBufAllocator10.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel12 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel15 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel12, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel12, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator3.buffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileChannel12);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf20);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator8 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator8.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator8.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator8.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator8.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator8.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator8.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator18.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel23 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel23, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel30 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator8, fileChannel23, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel23, (int) (short) 100, (long) (short) 100);
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(fileChannel23);
        org.junit.Assert.assertNotNull(byteBuf35);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0, (int) (byte) 10);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric15 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric15);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '#');
        boolean boolean10 = unpooledByteBufAllocator0.isDirectBufferPooled();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer((-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        int[] intArray7 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray10 = new io.netty.buffer.ByteBuf[] { byteBuf8, byteBuf9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteBufArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertArrayEquals(intArray7, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(52, 64);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator3.compositeDirectBuffer((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = io.netty.buffer.UnpooledByteBufAllocator.DEFAULT;
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 1L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        long long38 = bufferedChannel9.size();
        bufferedChannel9.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator0.ioBuffer(52);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator35 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str36 = unpooledByteBufAllocator35.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator35.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator35.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator35.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator35.directBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator35.buffer((int) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator45 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator45.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator45.ioBuffer();
        int int51 = unpooledByteBufAllocator45.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator45.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf53 = unpooledByteBufAllocator45.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator45.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator45.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator60 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator61 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator61.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf64 = unpooledByteBufAllocator61.ioBuffer();
        int int67 = unpooledByteBufAllocator61.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf68 = unpooledByteBufAllocator61.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator61.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf71 = unpooledByteBufAllocator61.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel72 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator61, fileChannel72, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator60, fileChannel72, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel82 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator45, fileChannel72, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator35, fileChannel72, (int) (short) 0, 2L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel88 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel72, (int) (short) 1, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf89 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str36, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator45);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertNotNull(compositeByteBuf53);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator61);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(byteBuf64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf68);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertNotNull(compositeByteBuf71);
        org.junit.Assert.assertNotNull(fileChannel72);
        org.junit.Assert.assertNotNull(compositeByteBuf89);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 32, 100, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        bufferedChannel22.flushAndForceWriteIfRegularFlush(true);
        io.netty.buffer.ByteBuf byteBuf27 = org.apache.bookkeeper.generated.Support.filledBuf(100, (byte) 1);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf27);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = bufferedChannel22.read(byteBuf27, (long) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=100)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) 4L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray10 = new byte[][] { byteArray9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0, 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator25.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator39.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator39.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator39.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator39.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator39.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator48 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator49.ioBuffer();
        int int55 = unpooledByteBufAllocator49.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator49.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator49.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator49.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel60 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel60, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator48, fileChannel60, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel60, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel60, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel60, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel60, (int) (short) 1, 10, (long) (byte) -1);
        io.netty.buffer.ByteBuf byteBuf82 = unpooledByteBufAllocator0.buffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(fileChannel60);
        org.junit.Assert.assertNotNull(byteBuf82);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) 'a');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric10 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) (short) 10);
        java.lang.String str13 = unpooledByteBufAllocator0.toString();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str13, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(1, (int) (short) 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric13 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric13);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator3.compositeDirectBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.heapBuffer();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        byte[] byteArray7 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray8 = new byte[][] { byteArray7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray8);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertArrayEquals(byteArray7, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf15);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator14.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel29 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel29, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel29, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel29, (int) (short) 0, (int) (short) 0, (long) 'a');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator0.directBuffer((int) (short) 100);
        java.lang.String str43 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator0.compositeHeapBuffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator0.buffer((int) 'a', 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(fileChannel29);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str43, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(byteBuf48);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyMedium((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt(32);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long35 = bufferedChannel9.position();
        long long36 = bufferedChannel9.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 0, (int) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator0.compositeBuffer(32);
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator0.directBuffer(0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(byteBuf22);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 'a');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric14 = unpooledByteBufAllocator0.metric();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric14);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        long long39 = bufferedChannel9.size();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str41 = unpooledByteBufAllocator40.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf42);
        int int46 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf42, 0L);
        bufferedChannel9.close();
        bufferedChannel9.close();
        // The following exception was thrown during execution in test generation
        try {
            long long50 = bufferedChannel9.forceWrite(true);
            org.junit.Assert.fail("Expected exception of type java.nio.channels.ClosedChannelException; message: null");
        } catch (java.nio.channels.ClosedChannelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str41, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator0.directBuffer(10, (int) (short) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf28);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 10, 100, (long) 1);
        java.nio.ByteBuffer[] byteBufferArray36 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray36);
        bufferedChannel32.write(byteBuf40);
        bufferedChannel32.close();
        bufferedChannel32.clear();
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.copyShort((int) (byte) -1);
        int int47 = bufferedChannel32.read(byteBuf45, (long) 10);
        long long48 = bufferedChannel32.getFileChannelPosition();
        short[] shortArray54 = new short[] { (short) 0, (short) 100, (byte) 1, (short) -1, (short) 1 };
        io.netty.buffer.ByteBuf byteBuf55 = io.netty.buffer.Unpooled.copyShort(shortArray54);
        io.netty.buffer.ByteBuf byteBuf56 = io.netty.buffer.Unpooled.copyShort(shortArray54);
        int int58 = bufferedChannel32.read(byteBuf56, (long) (short) -1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(byteBufferArray36);
        org.junit.Assert.assertArrayEquals(byteBufferArray36, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertArrayEquals(shortArray54, new short[] { (short) 0, (short) 100, (short) 1, (short) -1, (short) 1 });
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.ioBuffer(10);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator12.buffer();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator12.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator12.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator12.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator26.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator26.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator35 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator36.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator36.ioBuffer();
        int int42 = unpooledByteBufAllocator36.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf43 = unpooledByteBufAllocator36.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator36.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator36.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel47 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel50 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel47, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel54 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator35, fileChannel47, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel47, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel47, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel47, 32, 10L);
        long long65 = bufferedChannel64.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator36);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertNotNull(fileChannel47);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(10, (int) '4');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flush();
        long long16 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.ioBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.heapBuffer(10, 64);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.directBuffer((int) (short) 0, 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        bufferedChannel9.clear();
        long long12 = bufferedChannel9.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 4L);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf14);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf15);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf16);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(10, 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.flush();
        bufferedChannel9.flushAndForceWrite(false);
        long long15 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator0.compositeDirectBuffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (byte) -1, 0);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        long long9 = bufferedChannel8.position();
        long long10 = bufferedChannel8.position();
        bufferedChannel8.flush();
        byte[] byteArray20 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray21 = new byte[][] { byteArray20 };
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray21);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copiedBuffer(byteArray21);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray21);
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copiedBuffer(byteArray21);
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray21);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.copiedBuffer(byteArray21);
        int int29 = bufferedChannel8.read(byteBuf27, (long) 10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertArrayEquals(byteArray20, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        byte[] byteArray0 = new byte[] {};
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteArray0, 64, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertArrayEquals(byteArray0, new byte[] {});
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        int[] intArray5 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray8 = new io.netty.buffer.ByteBuf[] { byteBuf6, byteBuf7 };
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray8);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray8);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertArrayEquals(intArray5, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer(10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer((io.netty.buffer.ByteBuf) compositeByteBuf14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        long long34 = bufferedChannel9.forceWrite(false);
        long long36 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long42 = bufferedChannel9.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyInt((int) (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        io.netty.buffer.ByteBuf[] byteBufArray2 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(10, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        org.junit.Assert.assertNotNull(byteBufArray2);
        org.junit.Assert.assertArrayEquals(byteBufArray2, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyInt(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        boolean[] booleanArray6 = new boolean[] { false, false, false, false, true, false };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyBoolean(booleanArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(booleanArray6);
        assertBooleanArrayEquals(booleanArray6, new boolean[] { false, false, false, false, true, false });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (byte) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        bufferedChannel35.clear();
        bufferedChannel35.flushAndForceWrite(true);
        bufferedChannel35.clear();
        java.nio.ByteBuffer[] byteBufferArray41 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf42 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray41);
        io.netty.buffer.ByteBuf byteBuf43 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray41);
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray41);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray41);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray41);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = bufferedChannel35.read(byteBuf46, (long) 4, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(byteBufferArray41);
        org.junit.Assert.assertArrayEquals(byteBufferArray41, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray9 = new byte[][] { byteArray8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf14);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray8, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer(1);
        java.lang.String str10 = unpooledByteBufAllocator0.toString();
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean12 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator13.ioBuffer();
        int int19 = unpooledByteBufAllocator13.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator13.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator13.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator13.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric25 = unpooledByteBufAllocator13.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator26.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator26.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator40.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator40.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator40.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator50 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator50.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator50.ioBuffer();
        int int56 = unpooledByteBufAllocator50.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator50.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf58 = unpooledByteBufAllocator50.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator50.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel61 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel64 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator50, fileChannel61, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel61, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel61, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel61, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel61, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel61, 52, (long) 'a');
        long long82 = bufferedChannel80.forceWrite(true);
        bufferedChannel80.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric25);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator50);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf58);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(fileChannel61);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = io.netty.buffer.Unpooled.compositeBuffer((int) (short) 100);
        int int26 = bufferedChannel22.read((io.netty.buffer.ByteBuf) compositeByteBuf24, (long) 1);
        bufferedChannel22.clear();
        long long28 = bufferedChannel22.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.nio.ByteBuffer[] byteBufferArray4 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(100, byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(100, byteBufferArray4);
        org.junit.Assert.assertNotNull(byteBufferArray4);
        org.junit.Assert.assertArrayEquals(byteBufferArray4, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer();
        java.lang.String str12 = unpooledByteBufAllocator0.toString();
        boolean boolean13 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str12, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer((int) (short) 0, (int) '#');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        int int25 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 100, 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator27.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator31.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel36 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel36, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel36, (int) (byte) 0, (int) '#', (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel36, (int) (byte) 1, (long) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator0.compositeHeapBuffer(10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(fileChannel36);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        io.netty.buffer.ByteBuf[] byteBufArray2 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(10, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray2);
        org.junit.Assert.assertNotNull(byteBufArray2);
        org.junit.Assert.assertArrayEquals(byteBufArray2, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator25.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator39.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator39.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator39.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator39.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator39.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator48 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator49.ioBuffer();
        int int55 = unpooledByteBufAllocator49.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator49.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator49.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator49.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel60 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel60, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator48, fileChannel60, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel60, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel60, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel60, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel60, (int) (short) 1, 10, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf81 = unpooledByteBufAllocator0.compositeDirectBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(fileChannel60);
        org.junit.Assert.assertNotNull(compositeByteBuf81);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        io.netty.buffer.CompositeByteBuf compositeByteBuf1 = io.netty.buffer.Unpooled.compositeBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unmodifiableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf1);
        org.junit.Assert.assertNotNull(compositeByteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        java.lang.String str36 = unpooledByteBufAllocator0.toString();
        int int39 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 0, 0);
        java.lang.String str40 = unpooledByteBufAllocator0.toString();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator0.compositeDirectBuffer(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str36, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str40, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        int int10 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flushAndForceWrite(false);
        long long14 = bufferedChannel9.forceWrite(true);
        int[] intArray19 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copyMedium(intArray19);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.copyInt(intArray19);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.copyShort(intArray19);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copyShort(intArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = bufferedChannel9.read(byteBuf23, (long) (byte) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertArrayEquals(intArray19, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer((int) (short) 1, (int) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric17 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator18 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator18.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator18.ioBuffer();
        int int24 = unpooledByteBufAllocator18.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator18.buffer();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator18.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator18.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator32 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator32.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator32.ioBuffer();
        int int38 = unpooledByteBufAllocator32.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator32.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator32.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator32.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel43 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator32, fileChannel43, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel50 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel43, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel53 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel43, (int) ' ', 1L);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator54.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator54.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator54.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator54.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf62 = unpooledByteBufAllocator54.ioBuffer(1, (int) (short) 100);
        java.lang.String str63 = unpooledByteBufAllocator54.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator54.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean69 = unpooledByteBufAllocator68.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel70 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel73 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel70, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel70, (int) (byte) 0, (long) (byte) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator18, fileChannel70, (int) '#', (long) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel70, 64, (int) (short) 0, (long) ' ');
        boolean boolean84 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf86 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric17);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator18);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(fileChannel43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator54);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(byteBuf62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str63, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(fileChannel70);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf86);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.directBuffer();
        java.lang.String str10 = unpooledByteBufAllocator3.toString();
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: false)");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyShort((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator4 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator4.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator4.ioBuffer();
        int int10 = unpooledByteBufAllocator4.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator4.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator4.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator4.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator4, fileChannel15, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel15, (int) (byte) 1, 10, (long) 0);
        bufferedChannel22.clear();
        long[] longArray24 = new long[] {};
        io.netty.buffer.ByteBuf byteBuf25 = io.netty.buffer.Unpooled.copyLong(longArray24);
        int int27 = bufferedChannel22.read(byteBuf25, (long) ' ');
        bufferedChannel22.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(longArray24);
        org.junit.Assert.assertArrayEquals(longArray24, new long[] {});
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        boolean boolean11 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.buffer(1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long20 = bufferedChannel14.getFileChannelPosition();
        int int21 = bufferedChannel14.getNumOfBytesInWriteBuffer();
        long long22 = bufferedChannel14.getFileChannelPosition();
        long long23 = bufferedChannel14.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100);
        boolean boolean13 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric15 = unpooledByteBufAllocator0.metric();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric15);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        io.netty.buffer.ByteBuf[] byteBufArray1 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray1);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray1);
        org.junit.Assert.assertNotNull(byteBufArray1);
        org.junit.Assert.assertArrayEquals(byteBufArray1, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyShort(intArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyShort(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator6 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator6.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator6.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator10.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel15, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel15, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator27.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.ioBuffer();
        int int33 = unpooledByteBufAllocator27.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator27.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator27.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator27.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel38 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel38, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel38, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator6, fileChannel38, (int) (short) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel38, 1, 1, (long) (byte) 1);
        boolean boolean52 = unpooledByteBufAllocator1.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator27);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(fileChannel38);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (byte) -1, 0);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf11);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) (byte) 1, 100);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        java.lang.String str36 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator0.heapBuffer();
        boolean boolean39 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str36, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        bufferedChannel14.flushAndForceWrite(false);
        bufferedChannel14.flush();
        bufferedChannel14.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        long long36 = bufferedChannel35.position();
        bufferedChannel35.flush();
        long long39 = bufferedChannel35.forceWrite(false);
        long long40 = bufferedChannel35.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator41.buffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator41.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer();
        int int54 = bufferedChannel35.read((io.netty.buffer.ByteBuf) compositeByteBuf51, (long) 10, (int) (short) 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator5.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel10 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel10, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator1, fileChannel10, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator1.ioBuffer();
        boolean boolean20 = unpooledByteBufAllocator1.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(fileChannel10);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf12);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer((int) (byte) 1, (int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer(0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator13.ioBuffer(10);
        boolean boolean18 = unpooledByteBufAllocator13.isDirectBufferPooled();
        boolean boolean19 = unpooledByteBufAllocator13.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator13.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator21 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator21.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator21.ioBuffer();
        int int27 = unpooledByteBufAllocator21.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator21.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator21.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator21.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric32 = unpooledByteBufAllocator21.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator21.compositeDirectBuffer();
        int int36 = unpooledByteBufAllocator21.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator37.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator37.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator46 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator47 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf49 = unpooledByteBufAllocator47.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator47.ioBuffer();
        int int53 = unpooledByteBufAllocator47.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator47.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator47.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator47.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel58 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator47, fileChannel58, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator46, fileChannel58, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel58, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator21, fileChannel58, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel58, 32);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel77 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel58, 64, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel58, (int) (byte) 1, (long) 32);
        io.netty.buffer.CompositeByteBuf compositeByteBuf82 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf85 = unpooledByteBufAllocator0.directBuffer(100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator21);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator47);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(fileChannel58);
        org.junit.Assert.assertNotNull(compositeByteBuf82);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.heapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator8 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric9 = unpooledByteBufAllocator8.metric();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator8.heapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator8.ioBuffer((int) (byte) 1, 64);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator8.buffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator17.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator17.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator17.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric28 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator17.compositeDirectBuffer();
        int int32 = unpooledByteBufAllocator17.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator33 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator33.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator33.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator33.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf38 = unpooledByteBufAllocator33.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator33.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator43.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator43.ioBuffer();
        int int49 = unpooledByteBufAllocator43.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator43.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator43.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf53 = unpooledByteBufAllocator43.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel54 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel57 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator43, fileChannel54, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator42, fileChannel54, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator33, fileChannel54, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel54, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator8, fileChannel54, (int) 'a', (int) (short) 0, (long) '#');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel54, (int) (short) 1, (int) '#', 2L);
        io.netty.buffer.ByteBuf byteBuf78 = unpooledByteBufAllocator3.heapBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf81 = unpooledByteBufAllocator3.directBuffer((int) (byte) 10, (int) '#');
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(compositeByteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(compositeByteBuf53);
        org.junit.Assert.assertNotNull(fileChannel54);
        org.junit.Assert.assertNotNull(byteBuf78);
        org.junit.Assert.assertNotNull(byteBuf81);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(-1, 100)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        int int34 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long35 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeDirectBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: -1 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf7);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.close();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray19 = new byte[][] { byteArray18 };
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray19);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.copiedBuffer(byteArray19);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf21);
        int int24 = bufferedChannel9.read(byteBuf22, (long) 10);
        long long25 = bufferedChannel9.position();
        // The following exception was thrown during execution in test generation
        try {
            bufferedChannel9.flush();
            org.junit.Assert.fail("Expected exception of type io.netty.util.IllegalReferenceCountException; message: refCnt: 0");
        } catch (io.netty.util.IllegalReferenceCountException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertArrayEquals(byteArray18, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        java.lang.String str4 = unpooledByteBufAllocator1.toString();
        int int7 = unpooledByteBufAllocator1.calculateNewCapacity((int) (short) 0, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator1.ioBuffer(0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator1.compositeBuffer((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str4, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf1 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf4 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator5 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator5.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator5.ioBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator9.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator9.ioBuffer();
        int int15 = unpooledByteBufAllocator9.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator9.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator9.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator9.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel20 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel20, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel27 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator5, fileChannel20, (int) (byte) 1, 10, (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel29 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel20, (int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator0.directBuffer(1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(compositeByteBuf4);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(fileChannel20);
        org.junit.Assert.assertNotNull(byteBuf31);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.directBuffer((-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) '4');
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        long long36 = bufferedChannel9.forceWrite(true);
        bufferedChannel9.close();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator25.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel36 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel39 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel36, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel36, (int) (byte) 100, (long) 32);
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator0.ioBuffer(52);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(fileChannel36);
        org.junit.Assert.assertNotNull(byteBuf44);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        java.nio.ByteBuffer[] byteBufferArray1 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray1);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray1);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray1);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray1);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray1);
        org.junit.Assert.assertNotNull(byteBufferArray1);
        org.junit.Assert.assertArrayEquals(byteBufferArray1, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer((int) '#');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (short) 1, 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 64, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(64, 4)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.copyLong((long) 0);
        int int41 = bufferedChannel9.read(byteBuf39, (long) '#');
        bufferedChannel9.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric12 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator13.buffer((int) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        int int22 = unpooledByteBufAllocator16.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator16.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator16.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator30.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator40.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator40.ioBuffer();
        int int46 = unpooledByteBufAllocator40.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator40.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator40.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf50 = unpooledByteBufAllocator40.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel51 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel54 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel51, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel51, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel51, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel51, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel51, (int) '#', 100, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel51, 32);
        io.netty.buffer.ByteBuf byteBuf74 = unpooledByteBufAllocator0.directBuffer((int) (short) 0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf77 = unpooledByteBufAllocator0.ioBuffer(10, 64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf79 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric12);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator40);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf50);
        org.junit.Assert.assertNotNull(fileChannel51);
        org.junit.Assert.assertNotNull(byteBuf74);
        org.junit.Assert.assertNotNull(byteBuf77);
        org.junit.Assert.assertNotNull(compositeByteBuf79);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        bufferedChannel51.close();
        boolean[] booleanArray53 = new boolean[] {};
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.copyBoolean(booleanArray53);
        io.netty.buffer.ByteBuf byteBuf55 = io.netty.buffer.Unpooled.copyBoolean(booleanArray53);
        io.netty.buffer.ByteBuf byteBuf56 = io.netty.buffer.Unpooled.copyBoolean(booleanArray53);
        io.netty.buffer.ByteBuf byteBuf57 = io.netty.buffer.Unpooled.copyBoolean(booleanArray53);
        io.netty.buffer.ByteBuf byteBuf58 = io.netty.buffer.Unpooled.copyBoolean(booleanArray53);
        io.netty.buffer.ByteBuf byteBuf59 = io.netty.buffer.Unpooled.copyBoolean(booleanArray53);
        int int61 = bufferedChannel51.read(byteBuf59, (long) (short) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(booleanArray53);
        assertBooleanArrayEquals(booleanArray53, new boolean[] {});
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertNotNull(byteBuf59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 132 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        io.netty.buffer.ByteBuf[] byteBufArray0 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray0);
        org.junit.Assert.assertNotNull(byteBufArray0);
        org.junit.Assert.assertArrayEquals(byteBufArray0, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(10, (int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf(32, (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 52, (int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 1, (int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf12);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) (byte) 100, 0);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf15);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        boolean boolean9 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer((int) '#', 64);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        double[] doubleArray36 = new double[] { 1.0d, 'a', '#' };
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.copyDouble(doubleArray36);
        int int39 = bufferedChannel9.read(byteBuf37, (long) ' ');
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long42 = bufferedChannel9.position();
        bufferedChannel9.flush();
        io.netty.buffer.ByteBuf byteBuf46 = org.apache.bookkeeper.generated.Support.filledBuf(64, (byte) -1);
        int int48 = bufferedChannel9.read(byteBuf46, 1L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertArrayEquals(doubleArray36, new double[] { 1.0d, 97.0d, 35.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copyInt(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) '#', (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        double[] doubleArray36 = new double[] { 1.0d, 'a', '#' };
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.copyDouble(doubleArray36);
        int int39 = bufferedChannel9.read(byteBuf37, (long) ' ');
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long42 = bufferedChannel9.position();
        bufferedChannel9.flush();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator44 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator44.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator44.ioBuffer();
        int int50 = unpooledByteBufAllocator44.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator44.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator44.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf54 = unpooledByteBufAllocator44.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel55 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator44, fileChannel55, 1, (long) (byte) 0);
        bufferedChannel58.flushAndForceWrite(true);
        long long61 = bufferedChannel58.getFileChannelPosition();
        long long62 = bufferedChannel58.getFileChannelPosition();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator63 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str64 = unpooledByteBufAllocator63.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf65 = unpooledByteBufAllocator63.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator63.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf69 = unpooledByteBufAllocator63.directBuffer((int) (byte) 0);
        bufferedChannel58.write(byteBuf69);
        io.netty.buffer.ByteBuf byteBuf71 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf69);
        io.netty.buffer.ByteBuf byteBuf72 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBuf69);
        int int75 = bufferedChannel9.read(byteBuf69, 10L, 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertArrayEquals(doubleArray36, new double[] { 1.0d, 97.0d, 35.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertNotNull(compositeByteBuf54);
        org.junit.Assert.assertNotNull(fileChannel55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str64, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf65);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertNotNull(byteBuf69);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) 'a');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric10 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) (short) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer(100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        byte[] byteArray0 = new byte[] {};
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray0);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray0, (int) '4', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 152 out of bounds for byte[0]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray0);
        org.junit.Assert.assertArrayEquals(byteArray0, new byte[] {});
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.heapBuffer((int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator1.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator1.compositeBuffer(64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator1.compositeBuffer();
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        int int35 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.close();
        byte[] byteArray46 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray47 = new byte[][] { byteArray46 };
        io.netty.buffer.ByteBuf byteBuf48 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray47);
        io.netty.buffer.ByteBuf byteBuf49 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray47);
        io.netty.buffer.ByteBuf byteBuf50 = io.netty.buffer.Unpooled.copiedBuffer(byteArray47);
        io.netty.buffer.ByteBuf byteBuf51 = io.netty.buffer.Unpooled.copiedBuffer(byteArray47);
        io.netty.buffer.ByteBuf byteBuf52 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) -1, byteArray47);
        io.netty.buffer.ByteBuf byteBuf53 = io.netty.buffer.Unpooled.copiedBuffer(byteArray47);
        io.netty.buffer.ByteBuf byteBuf54 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray47);
        io.netty.buffer.ByteBuf byteBuf55 = io.netty.buffer.Unpooled.copiedBuffer(byteArray47);
        io.netty.buffer.ByteBuf byteBuf56 = io.netty.buffer.Unpooled.copiedBuffer(byteArray47);
        int int59 = bufferedChannel9.read(byteBuf56, (long) 1, (-1));
        int[] intArray66 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf67 = io.netty.buffer.Unpooled.copyMedium(intArray66);
        io.netty.buffer.ByteBuf byteBuf68 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray69 = new io.netty.buffer.ByteBuf[] { byteBuf67, byteBuf68 };
        io.netty.buffer.ByteBuf byteBuf70 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray69);
        io.netty.buffer.ByteBuf byteBuf71 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray69);
        io.netty.buffer.ByteBuf byteBuf72 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray69);
        io.netty.buffer.ByteBuf byteBuf73 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray69);
        io.netty.buffer.ByteBuf byteBuf74 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray69);
        io.netty.buffer.ByteBuf byteBuf75 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray69);
        io.netty.buffer.ByteBuf byteBuf76 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray69);
        int int79 = bufferedChannel9.read(byteBuf76, (long) 100, (int) (byte) 0);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long82 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertArrayEquals(byteArray46, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertArrayEquals(intArray66, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertNotNull(byteBuf68);
        org.junit.Assert.assertNotNull(byteBufArray69);
        org.junit.Assert.assertNotNull(byteBuf70);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertNotNull(byteBuf73);
        org.junit.Assert.assertNotNull(byteBuf74);
        org.junit.Assert.assertNotNull(byteBuf75);
        org.junit.Assert.assertNotNull(byteBuf76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        long[] longArray5 = new long[] { (short) 10, '#', 10, (byte) -1, 100L };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyLong(longArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyLong(longArray5);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyLong(longArray5);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyLong(longArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyLong(longArray5);
        org.junit.Assert.assertNotNull(longArray5);
        org.junit.Assert.assertArrayEquals(longArray5, new long[] { 10L, 35L, 10L, (-1L), 100L });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf13);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        io.netty.buffer.ByteBuf[] byteBufArray2 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray2);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(4, byteBufArray2);
        org.junit.Assert.assertNotNull(byteBufArray2);
        org.junit.Assert.assertArrayEquals(byteBufArray2, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyDouble((double) 64);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        int int35 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator36.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator36.ioBuffer(10);
        bufferedChannel9.write(byteBuf40);
        long long42 = bufferedChannel9.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator36);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        java.nio.ByteBuffer[] byteBufferArray2 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray2);
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(52, byteBufferArray2);
        org.junit.Assert.assertNotNull(byteBufferArray2);
        org.junit.Assert.assertArrayEquals(byteBufferArray2, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeDirectBuffer(64);
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.directBuffer((int) (short) 0);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator0.compositeBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.ioBuffer(10, 64);
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator0.buffer((int) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 32 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(0, byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer((-1), byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf17);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(0, 97)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        int int25 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 100, 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator27.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator31.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel36 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel36, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel36, (int) (byte) 0, (int) '#', (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel36, (int) (byte) 1, (long) (byte) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator0.directBuffer((int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(10)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(fileChannel36);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyBoolean(true);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        boolean boolean5 = unpooledByteBufAllocator0.isDirectBufferPooled();
        boolean boolean6 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator8 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator8.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator8.ioBuffer();
        int int14 = unpooledByteBufAllocator8.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator8.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator8.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator8.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric19 = unpooledByteBufAllocator8.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator8.compositeDirectBuffer();
        int int23 = unpooledByteBufAllocator8.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator24.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator33 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator34 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator34.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator34.ioBuffer();
        int int40 = unpooledByteBufAllocator34.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf41 = unpooledByteBufAllocator34.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator34.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator34.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel45 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator34, fileChannel45, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator33, fileChannel45, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel45, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator8, fileChannel45, 1, (-1L));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel45, 32);
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator34);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(fileChannel45);
        org.junit.Assert.assertNotNull(byteBuf63);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (byte) 10, (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer((int) '#');
        int int17 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator12 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator12.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator12.ioBuffer();
        int int18 = unpooledByteBufAllocator12.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator12.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator12.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator12.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric23 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric24 = unpooledByteBufAllocator12.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator25.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator25.ioBuffer();
        int int31 = unpooledByteBufAllocator25.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator25.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator25.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf37 = unpooledByteBufAllocator25.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator25.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator39 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator39.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator39.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator39.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf44 = unpooledByteBufAllocator39.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator39.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator48 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf52 = unpooledByteBufAllocator49.ioBuffer();
        int int55 = unpooledByteBufAllocator49.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator49.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf57 = unpooledByteBufAllocator49.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf59 = unpooledByteBufAllocator49.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel60 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel60, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel67 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator48, fileChannel60, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator39, fileChannel60, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel74 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel60, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator12, fileChannel60, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel80 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel60, 100, (int) (byte) 100, (long) ' ');
        io.netty.buffer.ByteBuf byteBuf83 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0, (int) '#');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator12);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric23);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric24);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator25);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(compositeByteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator39);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(compositeByteBuf57);
        org.junit.Assert.assertNotNull(compositeByteBuf59);
        org.junit.Assert.assertNotNull(fileChannel60);
        org.junit.Assert.assertNotNull(byteBuf83);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        int int10 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        long long12 = bufferedChannel9.forceWrite(true);
        byte[] byteArray16 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray16);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteArray16);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.copiedBuffer(byteArray16);
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray16);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray16);
        io.netty.buffer.ByteBuf byteBuf22 = io.netty.buffer.Unpooled.copiedBuffer(byteArray16);
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copiedBuffer(byteArray16);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = bufferedChannel9.read(byteBuf23, (long) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertArrayEquals(byteArray16, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyShort(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        io.netty.buffer.ByteBuf[] byteBufArray5 = new io.netty.buffer.ByteBuf[] {};
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(10, byteBufArray5);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray5);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(100, byteBufArray5);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(64, byteBufArray5);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufArray5);
        org.junit.Assert.assertNotNull(byteBufArray5);
        org.junit.Assert.assertArrayEquals(byteBufArray5, new io.netty.buffer.ByteBuf[] {});
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(0, (int) ' ');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf3 = unpooledByteBufAllocator1.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator1.directBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator1.heapBuffer(1);
        org.junit.Assert.assertNotNull(compositeByteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator3.ioBuffer(4);
        io.netty.buffer.CompositeByteBuf compositeByteBuf9 = unpooledByteBufAllocator3.compositeHeapBuffer(32);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf9);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyBoolean(true);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyInt(intArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyShort(intArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copyInt(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        int int9 = unpooledByteBufAllocator3.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator3.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel14 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel17 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel14, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel21 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator2, fileChannel14, 100, (int) (short) 0, (long) (-1));
        int int22 = bufferedChannel21.getNumOfBytesInWriteBuffer();
        bufferedChannel21.clear();
        long long24 = bufferedChannel21.getFileChannelPosition();
        int[] intArray29 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.copyMedium(intArray29);
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.copyInt(intArray29);
        io.netty.buffer.ByteBuf byteBuf32 = io.netty.buffer.Unpooled.copyShort(intArray29);
        io.netty.buffer.ByteBuf byteBuf33 = io.netty.buffer.Unpooled.copyShort(intArray29);
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.copyShort(intArray29);
        bufferedChannel21.write(byteBuf34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator3);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(fileChannel14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertArrayEquals(intArray29, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer(0, (int) (short) 0);
        java.lang.String str14 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str14, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        boolean boolean23 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator0.heapBuffer(1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator0.compositeDirectBuffer((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator0.directBuffer((int) (byte) 100, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 100 (expected: not greater than maxCapacity(52)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) (short) -1, (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator0.heapBuffer();
        java.lang.String str6 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel31 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator33 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str34 = unpooledByteBufAllocator33.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf35 = unpooledByteBufAllocator33.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator33.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator40 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator41.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator41.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel52, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator40, fileChannel52, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel63 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator33, fileChannel52, (int) (byte) 0, 32, (long) 64);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel66 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel52, 52, (long) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf69 = unpooledByteBufAllocator0.ioBuffer(4, (int) (short) 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str6, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str34, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf35);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(fileChannel52);
        org.junit.Assert.assertNotNull(byteBuf69);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        boolean boolean9 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean14 = unpooledByteBufAllocator13.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel15 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel18 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel15, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator19.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf23 = unpooledByteBufAllocator19.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator19.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator19.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf28 = unpooledByteBufAllocator19.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator29 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator29.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator29.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel34 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel38 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator29, fileChannel34, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel34, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel34, 1, 1L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel34, 4, (int) (short) 0, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator49 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator49.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator49.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel54 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator49, fileChannel54, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel58.flushAndForceWrite(false);
        bufferedChannel58.flushAndForceWrite(true);
        bufferedChannel58.flushAndForceWrite(true);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator65 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf67 = unpooledByteBufAllocator65.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf68 = unpooledByteBufAllocator65.ioBuffer();
        int int71 = unpooledByteBufAllocator65.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf72 = unpooledByteBufAllocator65.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf73 = unpooledByteBufAllocator65.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf75 = unpooledByteBufAllocator65.compositeBuffer(100);
        io.netty.buffer.ByteBuf byteBuf78 = unpooledByteBufAllocator65.ioBuffer(0, (int) (short) 0);
        bufferedChannel58.write(byteBuf78);
        int int81 = bufferedChannel48.read(byteBuf78, (long) (short) 10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileChannel15);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(compositeByteBuf28);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator29);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(fileChannel34);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator49);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(fileChannel54);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator65);
        org.junit.Assert.assertNotNull(byteBuf67);
        org.junit.Assert.assertNotNull(byteBuf68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf72);
        org.junit.Assert.assertNotNull(compositeByteBuf73);
        org.junit.Assert.assertNotNull(compositeByteBuf75);
        org.junit.Assert.assertNotNull(byteBuf78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator0.compositeDirectBuffer();
        java.lang.String str24 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator0.buffer((int) (byte) 100, 100);
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator0.buffer((int) (short) 10);
        java.lang.String str31 = unpooledByteBufAllocator0.toString();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str24, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str31, "UnpooledByteBufAllocator(directByDefault: true)");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flush();
        bufferedChannel9.clear();
        bufferedChannel9.flush();
        int int13 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flush();
        bufferedChannel9.close();
        bufferedChannel9.close();
        int int17 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.wrappedBuffer((long) 32, (int) (byte) -1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: sun.misc.Unsafe or java.nio.DirectByteBuffer.<init>(long, int) not available");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyBoolean(true);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf1);
        io.netty.buffer.ByteBuf byteBuf3 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copyFloat((-1.0f));
        int int19 = bufferedChannel9.read(byteBuf17, (long) 'a');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        int[] intArray4 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray7 = new io.netty.buffer.ByteBuf[] { byteBuf5, byteBuf6 };
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray7);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray7);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertArrayEquals(intArray4, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufArray7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf11);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer(0, (int) '#');
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator11 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator11.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator11.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator15.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator15.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel20 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel20, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel20, (int) (byte) 0, (int) '#', (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator32 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf34 = unpooledByteBufAllocator32.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator32.ioBuffer();
        int int38 = unpooledByteBufAllocator32.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf39 = unpooledByteBufAllocator32.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator32.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator32.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel43 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel46 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator32, fileChannel43, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel50 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel43, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel52 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel43, (int) (short) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator53.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator53.ioBuffer();
        int int59 = unpooledByteBufAllocator53.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf60 = unpooledByteBufAllocator53.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator53.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf64 = unpooledByteBufAllocator53.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf65 = unpooledByteBufAllocator53.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator68 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator69 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf71 = unpooledByteBufAllocator69.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf72 = unpooledByteBufAllocator69.ioBuffer();
        int int75 = unpooledByteBufAllocator69.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf76 = unpooledByteBufAllocator69.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf77 = unpooledByteBufAllocator69.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf79 = unpooledByteBufAllocator69.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel80 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator69, fileChannel80, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel87 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator68, fileChannel80, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel90 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel80, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel93 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator11, fileChannel80, (int) '4', (long) (short) 100);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel95 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel80, 0);
        long long96 = bufferedChannel95.getFileChannelPosition();
        bufferedChannel95.flush();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator15);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(fileChannel20);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator32);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(fileChannel43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator53);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf60);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(byteBuf64);
        org.junit.Assert.assertNotNull(compositeByteBuf65);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator69);
        org.junit.Assert.assertNotNull(byteBuf71);
        org.junit.Assert.assertNotNull(byteBuf72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf76);
        org.junit.Assert.assertNotNull(compositeByteBuf77);
        org.junit.Assert.assertNotNull(compositeByteBuf79);
        org.junit.Assert.assertNotNull(fileChannel80);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 0L + "'", long96 == 0L);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: arraycopy: last source index 42 out of bounds for byte[3]");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer(1, 100);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.ioBuffer(0);
        boolean boolean16 = unpooledByteBufAllocator0.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        bufferedChannel14.flushAndForceWrite(true);
        long long17 = bufferedChannel14.getFileChannelPosition();
        long long18 = bufferedChannel14.getFileChannelPosition();
        long long19 = bufferedChannel14.position();
        long long20 = bufferedChannel14.getFileChannelPosition();
        bufferedChannel14.flush();
        bufferedChannel14.flushAndForceWrite(true);
        int[] intArray29 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.copyMedium(intArray29);
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray32 = new io.netty.buffer.ByteBuf[] { byteBuf30, byteBuf31 };
        io.netty.buffer.ByteBuf byteBuf33 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf34 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf35 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray32);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf38);
        int int41 = bufferedChannel14.read(byteBuf38, (long) (short) 100);
        int int42 = bufferedChannel14.getNumOfBytesInWriteBuffer();
        byte[] byteArray46 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf47 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray46);
        io.netty.buffer.ByteBuf byteBuf48 = io.netty.buffer.Unpooled.copiedBuffer(byteArray46);
        io.netty.buffer.ByteBuf byteBuf49 = io.netty.buffer.Unpooled.copiedBuffer(byteArray46);
        io.netty.buffer.ByteBuf byteBuf50 = io.netty.buffer.Unpooled.copiedBuffer(byteArray46);
        io.netty.buffer.ByteBuf byteBuf51 = io.netty.buffer.Unpooled.copiedBuffer(byteArray46);
        int int53 = bufferedChannel14.read(byteBuf51, 10L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertArrayEquals(intArray29, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBufArray32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf34);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertArrayEquals(byteArray46, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator14.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel29 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel29, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel29, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel29, (int) (short) 0, (int) (short) 0, (long) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator41 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator41.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator41.ioBuffer();
        int int47 = unpooledByteBufAllocator41.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator41.buffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator41.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf51 = unpooledByteBufAllocator41.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator55 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator55.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator55.ioBuffer();
        int int61 = unpooledByteBufAllocator55.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator55.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf63 = unpooledByteBufAllocator55.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf65 = unpooledByteBufAllocator55.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel66 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel69 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator55, fileChannel66, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel73 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel66, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator41, fileChannel66, (int) ' ', 1L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel78 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel66, 1);
        io.netty.buffer.ByteBuf byteBuf79 = unpooledByteBufAllocator0.ioBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(fileChannel29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator41);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(compositeByteBuf51);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator55);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(byteBuf58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf65);
        org.junit.Assert.assertNotNull(fileChannel66);
        org.junit.Assert.assertNotNull(byteBuf79);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: maxNumComponents: 0 (expected: >= 1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.directBuffer((int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 52 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel23 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, 64, (int) (short) 100, (long) (short) 0);
        io.netty.buffer.ByteBuf byteBuf24 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(byteBuf24);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeHeapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.directBuffer((int) (byte) -1, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf((int) ' ', (byte) 1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.ioBuffer(1, (int) (short) 100);
        java.lang.String str9 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) (byte) 0, (long) (byte) -1);
        int int25 = unpooledByteBufAllocator0.calculateNewCapacity((int) (short) 100, 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator27 = new io.netty.buffer.UnpooledByteBufAllocator(true);
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator27.compositeHeapBuffer((int) (short) 1);
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator27.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator31 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator31.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf35 = unpooledByteBufAllocator31.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel36 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator31, fileChannel36, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator27, fileChannel36, (int) (byte) 0, (int) '#', (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel47 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel36, (int) (byte) 1, (long) (byte) 1);
        long long48 = bufferedChannel47.size();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str9, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator31);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertNotNull(byteBuf35);
        org.junit.Assert.assertNotNull(fileChannel36);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator0.directBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator0.heapBuffer(64);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf58 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 1 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf55);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyLong((long) (byte) -1);
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.wrappedBuffer(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.ioBuffer((int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (short) 10);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.unreleasableBuffer((io.netty.buffer.ByteBuf) compositeByteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        byte[] byteArray9 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray10 = new byte[][] { byteArray9 };
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray10);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray10);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(32, byteArray10);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray10);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray9, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator0.compositeBuffer((int) (byte) 1);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.heapBuffer(32);
        io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator0.ioBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel11 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel14 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel11, 1, (long) (byte) 0);
        int int17 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 1, (int) 'a');
        boolean boolean18 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator19.ioBuffer();
        int int25 = unpooledByteBufAllocator19.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator19.buffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator19.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator19.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator19.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf32 = unpooledByteBufAllocator19.compositeDirectBuffer((int) ' ');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric33 = unpooledByteBufAllocator19.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean38 = unpooledByteBufAllocator37.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel39 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel42 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel39, 0, (long) '4');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator43 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf45 = unpooledByteBufAllocator43.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator43.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator43.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf48 = unpooledByteBufAllocator43.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf51 = unpooledByteBufAllocator43.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf52 = unpooledByteBufAllocator43.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator53.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator53.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel58 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel58, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel65 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator43, fileChannel58, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel58, 1, 1L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel71 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel58, (int) '#', (long) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel58, 100, (int) (byte) 0, (long) (short) 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(fileChannel11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf32);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fileChannel39);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator43);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(compositeByteBuf48);
        org.junit.Assert.assertNotNull(byteBuf51);
        org.junit.Assert.assertNotNull(compositeByteBuf52);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator53);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(fileChannel58);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) ' ', byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(100, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator17.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator17.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator17.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric28 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric29 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        int int36 = unpooledByteBufAllocator30.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator30.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator30.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator44 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator44.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator44.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator44.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator44.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator44.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator54.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator54.ioBuffer();
        int int60 = unpooledByteBufAllocator54.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator54.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator54.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator54.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel65 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel65, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel65, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator44, fileChannel65, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel65, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel65, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel65, (int) (short) 10, (int) (short) 0, (long) '4');
        bufferedChannel85.clear();
        bufferedChannel85.close();
        bufferedChannel85.close();
        long long89 = bufferedChannel85.getFileChannelPosition();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric28);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator54);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(fileChannel65);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.copyFloat((float) ' ');
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.unreleasableBuffer(byteBuf1);
        java.lang.Class<?> wildcardClass3 = byteBuf2.getClass();
        org.junit.Assert.assertNotNull(byteBuf1);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf9);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        boolean boolean9 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.ioBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(false);
        long long36 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer(10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf15 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.directBuffer(100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf15);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator17.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator17.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator28 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator28.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf31 = unpooledByteBufAllocator28.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator28.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator28.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf36 = unpooledByteBufAllocator28.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator37 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator37.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator37.ioBuffer();
        int int43 = unpooledByteBufAllocator37.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator37.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf47 = unpooledByteBufAllocator37.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator37.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator37.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator51 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator51.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf54 = unpooledByteBufAllocator51.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf55 = unpooledByteBufAllocator51.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf56 = unpooledByteBufAllocator51.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator51.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator60 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator61 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator61.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf64 = unpooledByteBufAllocator61.ioBuffer();
        int int67 = unpooledByteBufAllocator61.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf68 = unpooledByteBufAllocator61.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf69 = unpooledByteBufAllocator61.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf71 = unpooledByteBufAllocator61.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel72 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel75 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator61, fileChannel72, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator60, fileChannel72, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel83 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator51, fileChannel72, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel86 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator37, fileChannel72, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel89 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator28, fileChannel72, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel92 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel72, (int) '#', 100L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel95 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel72, 0, 1L);
        io.netty.buffer.ByteBuf byteBuf98 = unpooledByteBufAllocator0.heapBuffer((int) (short) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator28);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(compositeByteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator51);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(byteBuf54);
        org.junit.Assert.assertNotNull(byteBuf55);
        org.junit.Assert.assertNotNull(compositeByteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator61);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(byteBuf64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf68);
        org.junit.Assert.assertNotNull(compositeByteBuf69);
        org.junit.Assert.assertNotNull(compositeByteBuf71);
        org.junit.Assert.assertNotNull(fileChannel72);
        org.junit.Assert.assertNotNull(byteBuf98);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer(10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator36.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator36.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator36.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf41 = unpooledByteBufAllocator36.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf44 = unpooledByteBufAllocator36.ioBuffer(1, (int) (short) 100);
        java.lang.String str45 = unpooledByteBufAllocator36.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf46 = unpooledByteBufAllocator36.compositeDirectBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator50 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean51 = unpooledByteBufAllocator50.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel52 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel55 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator50, fileChannel52, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator36, fileChannel52, (int) (byte) 0, (long) (byte) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel61 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel52, (int) '#', (long) 10);
        long long62 = bufferedChannel61.position();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator36);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(compositeByteBuf41);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str45, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileChannel52);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        long long10 = bufferedChannel9.size();
        bufferedChannel9.flushAndForceWrite(false);
        long long13 = bufferedChannel9.getFileChannelPosition();
        bufferedChannel9.close();
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.buffer((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = bufferedChannel9.read(byteBuf16, (long) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Read past EOF");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteBuf16);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        io.netty.buffer.ByteBuf byteBuf1 = io.netty.buffer.Unpooled.directBuffer(10);
        org.junit.Assert.assertNotNull(byteBuf1);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, (int) (byte) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(0, 10)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        int[] intArray40 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf41 = io.netty.buffer.Unpooled.copyMedium(intArray40);
        io.netty.buffer.ByteBuf byteBuf42 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray43 = new io.netty.buffer.ByteBuf[] { byteBuf41, byteBuf42 };
        io.netty.buffer.ByteBuf byteBuf44 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray43);
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray43);
        io.netty.buffer.ByteBuf byteBuf46 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteBufArray43);
        int int48 = bufferedChannel9.read(byteBuf46, 0L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertArrayEquals(intArray40, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertNotNull(byteBufArray43);
        org.junit.Assert.assertNotNull(byteBuf44);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator1 = new io.netty.buffer.UnpooledByteBufAllocator(false);
        java.lang.String str2 = unpooledByteBufAllocator1.toString();
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator1.directBuffer((int) (short) 10, (int) 'a');
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric6 = unpooledByteBufAllocator1.metric();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str2, "UnpooledByteBufAllocator(directByDefault: false)");
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric6);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator36 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, true);
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator36.directBuffer();
        io.netty.buffer.ByteBuf byteBuf40 = unpooledByteBufAllocator36.buffer((int) (short) 10, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = bufferedChannel9.read(byteBuf40, (long) ' ', 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: dest buffer remaining capacity is not enough(must be at least as \"length\"=52)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf40);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.buffer(100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str10 = unpooledByteBufAllocator9.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator9.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator9.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator9.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator9.directBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator9.buffer((int) 'a');
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator19 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator19.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator19.ioBuffer();
        int int25 = unpooledByteBufAllocator19.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf26 = unpooledByteBufAllocator19.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator19.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf30 = unpooledByteBufAllocator19.heapBuffer((int) 'a', (int) (byte) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator19.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator34 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator35 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator35.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf38 = unpooledByteBufAllocator35.ioBuffer();
        int int41 = unpooledByteBufAllocator35.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator35.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf43 = unpooledByteBufAllocator35.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf45 = unpooledByteBufAllocator35.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel46 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator35, fileChannel46, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel53 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator34, fileChannel46, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel56 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator19, fileChannel46, (int) (byte) 1, 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel59 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel46, (int) (short) 0, 2L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel62 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel46, (int) (short) 0, (long) 100);
        long long64 = bufferedChannel62.forceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str10, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf11);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator19);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf26);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator35);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(compositeByteBuf43);
        org.junit.Assert.assertNotNull(compositeByteBuf45);
        org.junit.Assert.assertNotNull(fileChannel46);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf16 = unpooledByteBufAllocator0.compositeHeapBuffer(52);
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator0.heapBuffer(52);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf21 = unpooledByteBufAllocator0.ioBuffer((int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(compositeByteBuf16);
        org.junit.Assert.assertNotNull(byteBuf18);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        java.lang.String str14 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator15 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str16 = unpooledByteBufAllocator15.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator15.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator15.directBuffer(64);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator22 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator23 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf25 = unpooledByteBufAllocator23.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator23.ioBuffer();
        int int29 = unpooledByteBufAllocator23.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf30 = unpooledByteBufAllocator23.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf31 = unpooledByteBufAllocator23.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator23.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel34 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel37 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator23, fileChannel34, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel41 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator22, fileChannel34, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel45 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator15, fileChannel34, (int) (byte) 0, 32, (long) 64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel49 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel34, (int) (byte) -1, 10, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str14, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str16, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator23);
        org.junit.Assert.assertNotNull(byteBuf25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf30);
        org.junit.Assert.assertNotNull(compositeByteBuf31);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(fileChannel34);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.ioBuffer(1);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator3.directBuffer((int) '4', 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 52 (expected: not greater than maxCapacity(32)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        java.lang.String str4 = unpooledByteBufAllocator2.toString();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator2.directBuffer(10, (int) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator2.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator2.compositeHeapBuffer(64);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str4, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        java.nio.ByteBuffer[] byteBufferArray3 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 1, byteBufferArray3);
        org.junit.Assert.assertNotNull(byteBufferArray3);
        org.junit.Assert.assertArrayEquals(byteBufferArray3, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator3.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator3.ioBuffer(10, (int) 'a');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.ioBuffer();
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        java.nio.ByteBuffer[] byteBufferArray35 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf36 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 0, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) -1, byteBufferArray35);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.copiedBuffer(byteBuf37);
        int int41 = bufferedChannel9.read(byteBuf37, (long) 0, (int) (byte) 0);
        long long42 = bufferedChannel9.size();
        long long43 = bufferedChannel9.getFileChannelPosition();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteBufferArray35);
        org.junit.Assert.assertArrayEquals(byteBufferArray35, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        java.lang.String str1 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf2 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.buffer((int) (short) 100);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.directBuffer((int) (byte) 0);
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator0.heapBuffer((int) (short) 10);
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer(10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 10 (expected: not greater than maxCapacity(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str1, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(compositeByteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator16 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator16.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator16.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator16.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator16.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator16.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator25 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator26 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator26.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf29 = unpooledByteBufAllocator26.ioBuffer();
        int int32 = unpooledByteBufAllocator26.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf33 = unpooledByteBufAllocator26.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf34 = unpooledByteBufAllocator26.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator26.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel37 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator26, fileChannel37, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel44 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator25, fileChannel37, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel48 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator16, fileChannel37, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel51 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel37, 1, (-1L));
        io.netty.buffer.ByteBuf byteBuf53 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf55 = unpooledByteBufAllocator0.compositeHeapBuffer((int) (byte) 1);
        java.nio.channels.FileChannel fileChannel56 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel58 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel56, (int) (byte) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator59 = io.netty.buffer.UnpooledByteBufAllocator.DEFAULT;
        io.netty.buffer.ByteBuf byteBuf60 = unpooledByteBufAllocator59.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator59.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf63 = unpooledByteBufAllocator59.buffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator59.compositeDirectBuffer();
        int int66 = bufferedChannel58.read((io.netty.buffer.ByteBuf) compositeByteBuf64, (long) (byte) -1);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator16);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf33);
        org.junit.Assert.assertNotNull(compositeByteBuf34);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(fileChannel37);
        org.junit.Assert.assertNotNull(byteBuf53);
        org.junit.Assert.assertNotNull(compositeByteBuf55);
        org.junit.Assert.assertNotNull(fileChannel56);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator59);
        org.junit.Assert.assertNotNull(byteBuf60);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(byteBuf63);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 };
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (byte) 10, 0);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray5);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.copiedBuffer(byteArray5, (int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertArrayEquals(byteArray5, new byte[] { (byte) -1, (byte) 10, (byte) 10, (byte) 10, (byte) 0 });
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric11 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeDirectBuffer();
        int int15 = unpooledByteBufAllocator0.calculateNewCapacity((int) (byte) 100, (int) (byte) 100);
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.ioBuffer((int) (short) 1);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric18 = unpooledByteBufAllocator0.metric();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator0.compositeHeapBuffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf5 = unpooledByteBufAllocator3.ioBuffer((int) (short) 0);
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.ioBuffer();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric7 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf8 = unpooledByteBufAllocator3.heapBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.ioBuffer((int) (byte) 10);
        boolean boolean11 = unpooledByteBufAllocator3.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator3.heapBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf14 = unpooledByteBufAllocator3.ioBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity : -1 (expected: >= 0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteBuf12);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        int[] intArray3 = new int[] { (short) 1, 'a', 'a' };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.copyInt(intArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copyMedium(intArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copyShort(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertArrayEquals(intArray3, new int[] { 1, 97, 97 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf7 = unpooledByteBufAllocator0.compositeDirectBuffer();
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 1, (int) ' ');
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.heapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf13 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf18 = unpooledByteBufAllocator14.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf19 = unpooledByteBufAllocator14.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf22 = unpooledByteBufAllocator14.ioBuffer(1, (int) (short) 100);
        io.netty.buffer.CompositeByteBuf compositeByteBuf23 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel29 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel33 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator24, fileChannel29, (int) (short) 1, (int) 'a', 0L);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel36 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel29, (int) 'a', (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel40 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel29, (int) (short) 0, (int) (short) 0, (long) 'a');
        io.netty.buffer.ByteBuf byteBuf42 = unpooledByteBufAllocator0.directBuffer((int) (short) 100);
        java.lang.String str43 = unpooledByteBufAllocator0.toString();
        java.lang.String str44 = unpooledByteBufAllocator0.toString();
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator0.buffer((int) (byte) 0, 32);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf7);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(compositeByteBuf13);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf19);
        org.junit.Assert.assertNotNull(byteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf23);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(fileChannel29);
        org.junit.Assert.assertNotNull(byteBuf42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str43, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str44, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf47);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        io.netty.buffer.ByteBuf byteBuf2 = org.apache.bookkeeper.generated.Support.filledBuf(64, (byte) 0);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(false);
        long long16 = bufferedChannel9.position();
        int[] intArray22 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.copyMedium(intArray22);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray25 = new io.netty.buffer.ByteBuf[] { byteBuf23, byteBuf24 };
        io.netty.buffer.ByteBuf byteBuf26 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf27 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf28 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf29 = io.netty.buffer.Unpooled.copiedBuffer(byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf30 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray25);
        io.netty.buffer.ByteBuf byteBuf31 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray25);
        int int33 = bufferedChannel9.read(byteBuf31, 4L);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertArrayEquals(intArray22, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertNotNull(byteBufArray25);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(byteBuf29);
        org.junit.Assert.assertNotNull(byteBuf30);
        org.junit.Assert.assertNotNull(byteBuf31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        byte[] byteArray8 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray9 = new byte[][] { byteArray8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.copiedBuffer(byteArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray9);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray8, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.ioBuffer(4, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 4 (expected: not greater than maxCapacity(1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean4 = unpooledByteBufAllocator3.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel8 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator3, fileChannel5, 0, (long) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator3.compositeBuffer((int) (short) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf11 = unpooledByteBufAllocator3.compositeBuffer();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(compositeByteBuf11);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(10, (int) (byte) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator13 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator14.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator14.ioBuffer();
        int int20 = unpooledByteBufAllocator14.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf21 = unpooledByteBufAllocator14.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf22 = unpooledByteBufAllocator14.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator14.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel25 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel25, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator13, fileChannel25, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel35 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel25, (int) ' ', 1L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf36 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator0.buffer();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator14);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf21);
        org.junit.Assert.assertNotNull(compositeByteBuf22);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(fileChannel25);
        org.junit.Assert.assertNotNull(compositeByteBuf36);
        org.junit.Assert.assertNotNull(byteBuf37);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.heapBuffer(52);
        io.netty.buffer.ByteBuf byteBuf15 = unpooledByteBufAllocator0.heapBuffer((int) (short) 10, (int) 'a');
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf15);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3, 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator2 = new io.netty.buffer.UnpooledByteBufAllocator(true, true);
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator2.ioBuffer();
        java.lang.String str4 = unpooledByteBufAllocator2.toString();
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator2.directBuffer(10, (int) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator2.compositeHeapBuffer();
        boolean boolean9 = unpooledByteBufAllocator2.isDirectBufferPooled();
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UnpooledByteBufAllocator(directByDefault: true)" + "'", str4, "UnpooledByteBufAllocator(directByDefault: true)");
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator3 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric4 = unpooledByteBufAllocator3.metric();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator3.heapBuffer((int) (short) 1);
        io.netty.buffer.CompositeByteBuf compositeByteBuf8 = unpooledByteBufAllocator3.compositeDirectBuffer((int) 'a');
        io.netty.buffer.ByteBuf byteBuf10 = unpooledByteBufAllocator3.buffer((int) (byte) 10);
        java.lang.String str11 = unpooledByteBufAllocator3.toString();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator3.compositeBuffer();
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric4);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(compositeByteBuf8);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UnpooledByteBufAllocator(directByDefault: false)" + "'", str11, "UnpooledByteBufAllocator(directByDefault: false)");
        org.junit.Assert.assertNotNull(compositeByteBuf12);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray11 = new byte[][] { byteArray10 };
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 100, byteArray11);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.wrappedBuffer(10, byteArray11);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.copiedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray11);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.wrappedBuffer((-1), byteArray11);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray10, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1, (byte) 10 };
        io.netty.buffer.ByteBuf byteBuf4 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.copiedBuffer(byteArray3);
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteArray3, 32, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: UnpooledHeapByteBuf(ridx: 0, widx: 3, cap: 3/3).slice(32, 64)");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertArrayEquals(byteArray3, new byte[] { (byte) 10, (byte) 1, (byte) 10 });
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '#');
        boolean boolean10 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator14 = new io.netty.buffer.UnpooledByteBufAllocator(false, true, false);
        boolean boolean15 = unpooledByteBufAllocator14.isDirectBufferPooled();
        java.nio.channels.FileChannel fileChannel16 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel19 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator14, fileChannel16, 0, (long) '4');
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel22 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel16, (int) '4', (long) ' ');
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator0.compositeHeapBuffer(52);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileChannel16);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        int int6 = unpooledByteBufAllocator0.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf7 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf10 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf11 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf12 = unpooledByteBufAllocator0.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.ByteBuf byteBuf16 = unpooledByteBufAllocator0.heapBuffer((int) (byte) 10, (int) (byte) 100);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator17 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf19 = unpooledByteBufAllocator17.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf20 = unpooledByteBufAllocator17.ioBuffer();
        int int23 = unpooledByteBufAllocator17.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf24 = unpooledByteBufAllocator17.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf25 = unpooledByteBufAllocator17.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf27 = unpooledByteBufAllocator17.compositeBuffer(100);
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric28 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.ByteBufAllocatorMetric byteBufAllocatorMetric29 = unpooledByteBufAllocator17.metric();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator30 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf32 = unpooledByteBufAllocator30.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf33 = unpooledByteBufAllocator30.ioBuffer();
        int int36 = unpooledByteBufAllocator30.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.ByteBuf byteBuf37 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.ByteBuf byteBuf39 = unpooledByteBufAllocator30.ioBuffer((int) '4');
        io.netty.buffer.CompositeByteBuf compositeByteBuf40 = unpooledByteBufAllocator30.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf41 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf42 = unpooledByteBufAllocator30.compositeHeapBuffer();
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator30.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator44 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf46 = unpooledByteBufAllocator44.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf47 = unpooledByteBufAllocator44.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf48 = unpooledByteBufAllocator44.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf49 = unpooledByteBufAllocator44.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf50 = unpooledByteBufAllocator44.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator53 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator54 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf56 = unpooledByteBufAllocator54.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf57 = unpooledByteBufAllocator54.ioBuffer();
        int int60 = unpooledByteBufAllocator54.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf61 = unpooledByteBufAllocator54.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf62 = unpooledByteBufAllocator54.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf64 = unpooledByteBufAllocator54.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel65 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel68 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator54, fileChannel65, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel72 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator53, fileChannel65, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel76 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator44, fileChannel65, (int) (byte) 10, 100, (long) 1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel79 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator30, fileChannel65, 64, (long) (short) -1);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel81 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator17, fileChannel65, (int) (short) 10);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel85 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel65, (int) (short) 10, (int) (short) 0, (long) '4');
        bufferedChannel85.clear();
        long long88 = bufferedChannel85.forceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(compositeByteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(compositeByteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator17);
        org.junit.Assert.assertNotNull(byteBuf19);
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf24);
        org.junit.Assert.assertNotNull(compositeByteBuf25);
        org.junit.Assert.assertNotNull(compositeByteBuf27);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric28);
        org.junit.Assert.assertNotNull(byteBufAllocatorMetric29);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator30);
        org.junit.Assert.assertNotNull(byteBuf32);
        org.junit.Assert.assertNotNull(byteBuf33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(compositeByteBuf40);
        org.junit.Assert.assertNotNull(byteBuf41);
        org.junit.Assert.assertNotNull(compositeByteBuf42);
        org.junit.Assert.assertNotNull(byteBuf43);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator44);
        org.junit.Assert.assertNotNull(byteBuf46);
        org.junit.Assert.assertNotNull(byteBuf47);
        org.junit.Assert.assertNotNull(byteBuf48);
        org.junit.Assert.assertNotNull(compositeByteBuf49);
        org.junit.Assert.assertNotNull(byteBuf50);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator54);
        org.junit.Assert.assertNotNull(byteBuf56);
        org.junit.Assert.assertNotNull(byteBuf57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf61);
        org.junit.Assert.assertNotNull(compositeByteBuf62);
        org.junit.Assert.assertNotNull(compositeByteBuf64);
        org.junit.Assert.assertNotNull(fileChannel65);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        int[] intArray6 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.copyMedium(intArray6);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray9 = new io.netty.buffer.ByteBuf[] { byteBuf7, byteBuf8 };
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf11 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf12 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf13 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf14 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf15 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf16 = io.netty.buffer.Unpooled.unmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf17 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf18 = io.netty.buffer.Unpooled.wrappedBuffer((int) '4', byteBufArray9);
        io.netty.buffer.ByteBuf byteBuf19 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray9);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertArrayEquals(intArray6, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBufArray9);
        org.junit.Assert.assertNotNull(byteBuf10);
        org.junit.Assert.assertNotNull(byteBuf11);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(byteBuf14);
        org.junit.Assert.assertNotNull(byteBuf15);
        org.junit.Assert.assertNotNull(byteBuf16);
        org.junit.Assert.assertNotNull(byteBuf17);
        org.junit.Assert.assertNotNull(byteBuf18);
        org.junit.Assert.assertNotNull(byteBuf19);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        long long32 = bufferedChannel9.position();
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        long long36 = bufferedChannel9.forceWrite(false);
        bufferedChannel9.flushAndForceWrite(true);
        int int39 = bufferedChannel9.getNumOfBytesInWriteBuffer();
        bufferedChannel9.flushAndForceWrite(false);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        byte[] byteArray19 = new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 };
        byte[][] byteArray20 = new byte[][] { byteArray19 };
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.wrappedBuffer((int) (short) 100, byteArray20);
        int int23 = bufferedChannel9.read(byteBuf21, (long) 0);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator24 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf26 = unpooledByteBufAllocator24.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf27 = unpooledByteBufAllocator24.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf28 = unpooledByteBufAllocator24.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf29 = unpooledByteBufAllocator24.compositeBuffer();
        int int31 = bufferedChannel9.read((io.netty.buffer.ByteBuf) compositeByteBuf29, (long) (short) 1);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWrite(true);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        bufferedChannel9.clear();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator42 = new io.netty.buffer.UnpooledByteBufAllocator(false, false, false);
        io.netty.buffer.ByteBuf byteBuf43 = unpooledByteBufAllocator42.heapBuffer();
        bufferedChannel9.write(byteBuf43);
        bufferedChannel9.flush();
        bufferedChannel9.flushAndForceWrite(true);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray19, new byte[] { (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) -1, (byte) 0 });
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator24);
        org.junit.Assert.assertNotNull(byteBuf26);
        org.junit.Assert.assertNotNull(byteBuf27);
        org.junit.Assert.assertNotNull(byteBuf28);
        org.junit.Assert.assertNotNull(compositeByteBuf29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteBuf43);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.ioBuffer(10);
        java.nio.channels.FileChannel fileChannel5 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel9 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel5, (int) (short) 1, (int) 'a', 0L);
        bufferedChannel9.flushAndForceWrite(false);
        bufferedChannel9.flushAndForceWriteIfRegularFlush(true);
        int[] intArray19 = new int[] { 0, (-1), 100, (short) -1 };
        io.netty.buffer.ByteBuf byteBuf20 = io.netty.buffer.Unpooled.copyMedium(intArray19);
        io.netty.buffer.ByteBuf byteBuf21 = io.netty.buffer.Unpooled.EMPTY_BUFFER;
        io.netty.buffer.ByteBuf[] byteBufArray22 = new io.netty.buffer.ByteBuf[] { byteBuf20, byteBuf21 };
        io.netty.buffer.ByteBuf byteBuf23 = io.netty.buffer.Unpooled.wrappedUnmodifiableBuffer(byteBufArray22);
        io.netty.buffer.ByteBuf byteBuf24 = io.netty.buffer.Unpooled.wrappedBuffer((int) 'a', byteBufArray22);
        int int26 = bufferedChannel9.read(byteBuf24, (long) '4');
        bufferedChannel9.clear();
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(fileChannel5);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertArrayEquals(intArray19, new int[] { 0, (-1), 100, (-1) });
        org.junit.Assert.assertNotNull(byteBuf20);
        org.junit.Assert.assertNotNull(byteBuf21);
        org.junit.Assert.assertNotNull(byteBufArray22);
        org.junit.Assert.assertNotNull(byteBuf23);
        org.junit.Assert.assertNotNull(byteBuf24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        // The following exception was thrown during execution in test generation
        try {
            io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.directBuffer((int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: initialCapacity: 35 (expected: not greater than maxCapacity(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator9 = new io.netty.buffer.UnpooledByteBufAllocator(false, false);
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator10 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator10.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator10.ioBuffer();
        int int16 = unpooledByteBufAllocator10.calculateNewCapacity(0, (int) (byte) 10);
        io.netty.buffer.CompositeByteBuf compositeByteBuf17 = unpooledByteBufAllocator10.compositeDirectBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf18 = unpooledByteBufAllocator10.compositeHeapBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf20 = unpooledByteBufAllocator10.compositeBuffer(100);
        java.nio.channels.FileChannel fileChannel21 = org.apache.bookkeeper.generated.Support.rwTempChannel();
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel24 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator10, fileChannel21, 1, (long) (byte) 0);
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel28 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator9, fileChannel21, 100, (int) (short) 0, (long) (-1));
        org.apache.bookkeeper.bookie.BufferedChannel bufferedChannel32 = new org.apache.bookkeeper.bookie.BufferedChannel((io.netty.buffer.ByteBufAllocator) unpooledByteBufAllocator0, fileChannel21, (int) (byte) 10, 100, (long) 1);
        java.nio.ByteBuffer[] byteBufferArray36 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf37 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf38 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf39 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray36);
        io.netty.buffer.ByteBuf byteBuf40 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray36);
        bufferedChannel32.write(byteBuf40);
        bufferedChannel32.close();
        bufferedChannel32.clear();
        io.netty.buffer.ByteBuf byteBuf45 = io.netty.buffer.Unpooled.copyShort((int) (byte) -1);
        int int47 = bufferedChannel32.read(byteBuf45, (long) 10);
        int int48 = bufferedChannel32.getNumOfBytesInWriteBuffer();
        // The following exception was thrown during execution in test generation
        try {
            long long50 = bufferedChannel32.forceWrite(true);
            org.junit.Assert.fail("Expected exception of type java.nio.channels.ClosedChannelException; message: null");
        } catch (java.nio.channels.ClosedChannelException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator10);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(compositeByteBuf17);
        org.junit.Assert.assertNotNull(compositeByteBuf18);
        org.junit.Assert.assertNotNull(compositeByteBuf20);
        org.junit.Assert.assertNotNull(fileChannel21);
        org.junit.Assert.assertNotNull(byteBufferArray36);
        org.junit.Assert.assertArrayEquals(byteBufferArray36, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf37);
        org.junit.Assert.assertNotNull(byteBuf38);
        org.junit.Assert.assertNotNull(byteBuf39);
        org.junit.Assert.assertNotNull(byteBuf40);
        org.junit.Assert.assertNotNull(byteBuf45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        io.netty.buffer.UnpooledByteBufAllocator unpooledByteBufAllocator0 = org.apache.bookkeeper.generated.Support.allocator();
        io.netty.buffer.ByteBuf byteBuf2 = unpooledByteBufAllocator0.buffer((int) '4');
        io.netty.buffer.ByteBuf byteBuf3 = unpooledByteBufAllocator0.ioBuffer();
        io.netty.buffer.ByteBuf byteBuf4 = unpooledByteBufAllocator0.directBuffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf5 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf6 = unpooledByteBufAllocator0.buffer();
        boolean boolean7 = unpooledByteBufAllocator0.isDirectBufferPooled();
        io.netty.buffer.ByteBuf byteBuf9 = unpooledByteBufAllocator0.buffer((int) ' ');
        io.netty.buffer.ByteBuf byteBuf12 = unpooledByteBufAllocator0.directBuffer((int) '#', 64);
        io.netty.buffer.ByteBuf byteBuf13 = unpooledByteBufAllocator0.buffer();
        io.netty.buffer.CompositeByteBuf compositeByteBuf14 = unpooledByteBufAllocator0.compositeBuffer();
        io.netty.buffer.ByteBuf byteBuf17 = unpooledByteBufAllocator0.directBuffer(4, (int) (byte) 100);
        org.junit.Assert.assertNotNull(unpooledByteBufAllocator0);
        org.junit.Assert.assertNotNull(byteBuf2);
        org.junit.Assert.assertNotNull(byteBuf3);
        org.junit.Assert.assertNotNull(byteBuf4);
        org.junit.Assert.assertNotNull(compositeByteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf12);
        org.junit.Assert.assertNotNull(byteBuf13);
        org.junit.Assert.assertNotNull(compositeByteBuf14);
        org.junit.Assert.assertNotNull(byteBuf17);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        java.nio.ByteBuffer[] byteBufferArray4 = new java.nio.ByteBuffer[] {};
        io.netty.buffer.ByteBuf byteBuf5 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf6 = io.netty.buffer.Unpooled.wrappedBuffer((int) (byte) 1, byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf7 = io.netty.buffer.Unpooled.wrappedBuffer((int) '#', byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf8 = io.netty.buffer.Unpooled.copiedBuffer(byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf9 = io.netty.buffer.Unpooled.wrappedBuffer(byteBufferArray4);
        io.netty.buffer.ByteBuf byteBuf10 = io.netty.buffer.Unpooled.wrappedBuffer(1, byteBufferArray4);
        org.junit.Assert.assertNotNull(byteBufferArray4);
        org.junit.Assert.assertArrayEquals(byteBufferArray4, new java.nio.ByteBuffer[] {});
        org.junit.Assert.assertNotNull(byteBuf5);
        org.junit.Assert.assertNotNull(byteBuf6);
        org.junit.Assert.assertNotNull(byteBuf7);
        org.junit.Assert.assertNotNull(byteBuf8);
        org.junit.Assert.assertNotNull(byteBuf9);
        org.junit.Assert.assertNotNull(byteBuf10);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        io.netty.buffer.ByteBuf byteBuf2 = io.netty.buffer.Unpooled.buffer(4, (int) (short) 10);
        org.junit.Assert.assertNotNull(byteBuf2);
    }
}

